{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/tide_prediction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/tide_prediction.vue","mtime":1682360357865},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682361371663},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682361372188}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRpZGVDaGFydEJsb2NrIiwKICBwcm9wczogewogICAgJ3RpZGVfc3RhdGlvbic6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiIgogICAgfSwKICAgICd0aWRlX3N0YXRpb25faWQnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIKICAgIH0sCiAgICAndGlkZV9kYXRhJzogewogICAgICBkZWZhdWx0OiB1bmRlZmluZWQKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBjb25zb2xlLmRlYnVnKCJUaWRlQ2hhcnRCbG9jayBtb3VudGVkLiIpOwogIH0sCiAgbWV0aG9kczogewogICAgZm9ybWF0X2RhdGU6IGZ1bmN0aW9uIGZvcm1hdF9kYXRlKHRpZGVfcmVjKSB7CiAgICAgIC8vIjIwMjItMDMtMjUgMDE6NTMiCiAgICAgIHZhciBmb3JtYXR0ZWRfZGF0ZSA9IG1vbWVudCh0aWRlX3JlYy50KTsKICAgICAgcmV0dXJuIGZvcm1hdHRlZF9kYXRlLmZvcm1hdCgiaGg6TU0gQSIpOwogICAgfSwKICAgIGZvcm1hdF90aWRlX3R5cGU6IGZ1bmN0aW9uIGZvcm1hdF90aWRlX3R5cGUodGlkZV9yZWMpIHsKICAgICAgaWYgKHRpZGVfcmVjLnR5cGUgPT0gJ0gnKSB7CiAgICAgICAgcmV0dXJuICJIaWdoIjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gIkxvdyI7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["tide_prediction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,oBAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AAEA,uBAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAGA,iBAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AAHA,GAFA;AAOA,EAAA,OAPA,qBAOA;AACA,IAAA,OAAA,CAAA,KAAA,CAAA,yBAAA;AACA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,QADA,EAEA;AACA;AACA,UAAA,cAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA,aAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA;AAEA,KAPA;AAQA,IAAA,gBARA,4BAQA,QARA,EAQA;AACA,UAAA,QAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,eAAA,MAAA;AACA,OAFA,MAGA;AACA,eAAA,KAAA;AACA;AACA;AAfA;AAVA,CAAA","sourcesContent":["<template>\n  <div :v-if=\"tide_data !== undefined\">\n    <div class=\"fs-6\">Station: {{tide_station}}({{tide_station_id}})</div>\n    <div class=\"row\">\n      <label v-for=\"(tide_prediction, index) in tide_data\" v-bind:key=\"index\" class=\"col-sm-2\">\n          {{format_date(tide_prediction)}}\n          {{format_tide_type(tide_prediction)}}\n      </label>\n    </div>\n    <!--\n    <div class=\"table table-borderless\">\n      <tr>\n        <th scope=\"row\"></th>\n        <label v-for=\"(tide_prediction, index) in tide_data\" v-bind:key=\"index\">\n          <td>{{format_date(tide_prediction)}} {{format_tide_type(tide_prediction)}}</td>\n        </label>\n      </tr>\n    </div>\n    -->\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nexport default {\n  name: \"TideChartBlock\",\n  props: {\n    'tide_station': {type: String, default: \"\"},\n    'tide_station_id':{type: String, default: \"\"},\n    'tide_data': {default: undefined}\n  },\n  mounted() {\n    console.debug(\"TideChartBlock mounted.\")\n  },\n  methods: {\n    format_date(tide_rec)\n    {\n      //\"2022-03-25 01:53\"\n      let formatted_date = moment(tide_rec.t);\n      return(formatted_date.format(\"hh:MM A\"));\n\n    },\n    format_tide_type(tide_rec) {\n      if(tide_rec.type == 'H'){\n        return (\"High\")\n      }\n      else {\n        return(\"Low\")\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}