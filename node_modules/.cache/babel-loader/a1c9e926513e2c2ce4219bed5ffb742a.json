{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_popup.vue","mtime":1682360357860},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/babel.config.js","mtime":1682360357849},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682365544304},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682365544513}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["moment","FeatureUtils","DataAPI","Highcharts","Icon","Style","NWSAlerts","none_marker","low_marker","high_marker","NowcastInfoModal","CollectionProgramModal","name","props","type","Object","default","undefined","String","Array","_default","components","data","loading","wq_info_active","graph_active","feature_data","zoom","center","rotation","init_graph_height","init_graph_width","graph_width","graph_height","activeBtn","chartTypeBtn","chart_data","scatter_plot_data","pie_chart_data","scatter_chart_ref","pie_chart_ref","records_above_max_threshold","percentage_exceeds","total_records","scatter_chart_options","chart","defaultSeriesType","marginRight","marginLeft","marginTop","credits","enabled","title","text","colors","xAxis","endOnTick","showLastLabel","offset","dateTimeLabelFormats","day","week","month","year","labels","y","tickWidth","yAxis","showFirstLabel","tickPositioner","min","max","ticks","i","length","val2lin","formatter","value","style","gridLineWidth","lineWidth","margin","plotBands","color","from","$store","state","advisory_limits","low","minimum","to","hi","tooltip","dateFormat","x","Math","round","legend","series","pie_chart_options","backgroundColor","plotOptions","pie","allowPointSelect","cursor","size","dataLabels","format","colorByPoint","activeBacteriaModal","activeBacteriaModalName","showBacteriaModal","showNowCastModal","mounted","_this","console","debug","vm","site_name","site_id","station_name","GetSitesPromise","then","features","sites","ndx","site","properties","feature","geometry","coordinates","advisory_info","commit","limits","maximum","pastData","methods","styleFunction","siteStyleFunction","resolution","icon_scale","icon","src","scale","icon_style","image","getAdvisoryImage","img_src","site_type","dataFresh","isDataFresh","advisory","hasAdvisoryData","hi_limit","lo_limit","advisoryValue","data_type","nowcasts","daysButtonClick","button_clicked","days","chartTypesButtonClick","chart_type","chartType","$refs","station_scatter_graph","setExtremes","utc","subtract","valueOf","station_pie_chart","days_back","location_site_name","start_date","end_date","GetSiteData","response","results","forEach","rec","date_val","date","push","calcStats","catch","error","data_array","parseInt","onClose","$emit","bacteriaPopup","clickNowCastInfo","alert_text_color","level","text_color","watch","computed","site_post_code","post_code","site_longitude","site_latitude","site_feature","site_description","description","get","set","show_bacteria_results","advisoryDate","date_str","date_obj","isValid","advisory_level","isNaN","hasNowcastData","nowcastsDate","nowcastsValue","haveWQData"],"sources":["src/components/station_popup.vue"],"sourcesContent":["<template>\n  <div class=\"montserat-font container page-background data-graph\">\n    <div class=\"row mt-3\">\n      <div class=\"col-sm-12 mt-5\">\n        <div class=\"font-avenir fs-4\">\n          <div>Water Quality Site: {{ site_description }}</div>\n          <div>Site ID: {{ site_id }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-3 min-width-map-column\">\n        <div v-if=\"feature !== undefined\" style=\"height: 250px; width: 250px\">\n          <vl-map id=\"single_site_map\"\n                  ref=\"single_site_map\"\n                  :load-tiles-while-animating=\"true\"\n                  :load-tiles-while-interacting=\"true\"\n                  data-projection=\"EPSG:4326\">\n            <vl-view :zoom.sync=\"zoom\" :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\n            <vl-layer-tile>\n              <vl-source-xyz url=\"https://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}\"\n                             attributions=\"\"/>\n            </vl-layer-tile>\n            <vl-layer-vector id=\"site\">\n              <vl-source-vector ref=\"site_vector_layer\" :features.sync=\"site_feature\"></vl-source-vector>\n              <vl-style-func :factory=\"styleFunction\"></vl-style-func>\n            </vl-layer-vector>\n          </vl-map>\n\n        </div>\n      </div>\n      <div class=\"col-sm-9\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 mt-3 m-lg-3\">\n            <div v-if=\"hasNowcastData\">\n              <div class=\"fs-4\">\n                <a @click=\"clickNowCastInfo\">Nowcast <i class=\"bi bi-info-circle info-icon\"></i></a>\n              </div>\n              <p>\n                <span class=\"ms-5 fs-5\">Nowcast for {{ nowcastsDate }}: <span :class=\"alert_text_color(nowcastsValue)\"> {{ nowcastsValue }}</span></span>\n                <br>\n                <span class=\"ml-4 avenir-font-light\"></span>\n                <br>\n                <b v-if='isDataFresh(\"nowcasts\") == false' class=\"ml-4 avenir-font-light text-danger\">RESULTS ARE OUT OF\n                  DATE</b>\n              </p>\n            </div>\n            <NowcastInfoModal ref=\"nowcast_modal\" v-show=\"showNowCastModal\" @close-nowcast-modal=\"showNowCastModal = false\" />\n          </div>\n        </div>\n        <div v-if=\"show_bacteria_results\" class=\"row\">\n          <div class=\"col-sm-12 mt-3 m-lg-3\">\n            <div class=\"fs-4\">\n              <a @click=\"bacteriaPopup\">Sampled Bacteria Data <i class=\"bi bi-info-circle info-icon\"></i></a>\n            </div>\n            <div v-if=\"!loading\">\n              <div v-if=\"hasAdvisoryData\">\n                  <div class=\"ms-5 fs-5\">\n                    Bacteria Data for {{ advisoryDate }}: <span :class=\"alert_text_color(advisoryValue)\">{{ advisoryValue }}</span>\n                  </div>\n                  <div class=\"ms-5 fs-5\">\n                    <b v-if='isDataFresh(\"advisory\") == false' class=\"avenir-font-light text-danger\">RESULTS ARE OUT OF\n                      DATE</b>\n                  </div>\n              </div>\n            </div>\n          </div>\n          <CollectionProgramModal program_type='Water Quality' v-show=\"showBacteriaModal\" @close-collection-modal=\"showBacteriaModal = false\"/>\n\n        </div>\n      </div>\n    </div>\n    <!---\n    <div class=\"row gy-0\">\n      <div class=\"col-12\">\n        <hr>\n        <div class=\"row\">\n          <div v-if=\"hasNowcastData\">\n            <div class=\"col mt-3\">\n              <div class=\"fs-6\">\n                <a @click=\"clickNowCastInfo\">Nowcast <i class=\"bi bi-info-circle info-icon\"></i></a>\n              </div>\n              <p>\n                <span class=\"ms-5 fs-6\">Nowcast for {{ nowcastsDate }}: <span :class=\"alert_text_color(nowcastsValue)\"> {{ nowcastsValue }}</span></span>\n                <br>\n                <span class=\"ml-4 avenir-font-light\"></span>\n                <br>\n                <b v-if='isDataFresh(\"nowcasts\") == false' class=\"ml-4 avenir-font-light text-danger\">RESULTS ARE OUT OF\n                  DATE</b>\n              </p>\n            </div>\n            <NowcastInfoModal ref=\"nowcast_modal\" v-show=\"showNowCastModal\" @close-nowcast-modal=\"showNowCastModal = false\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    --->\n    <!---\n    Water quality data row\n    --->\n    <!---\n    <div class=\"row gy-0\">\n      <div class=\"col-sm-12\">\n        <hr>\n        <div class=\"fs-6\">\n          <a @click=\"bacteriaPopup\">Sampled Bacteria Data <i class=\"bi bi-info-circle info-icon\"></i></a>\n        </div>\n        <div v-if=\"!loading\">\n          <div v-if=\"hasAdvisoryData\" class=\"row\">\n            <div class=\"col-sm-4\">\n              <div class=\"ms-5 fs-6\">\n                Bacteria Data for {{ advisoryDate }}: <span :class=\"alert_text_color(advisoryValue)\">{{ advisoryValue }}</span>\n              </div>\n              <div class=\"ms-5 fs-6\">\n                <b v-if='isDataFresh(\"advisory\") == false' class=\"avenir-font-light text-danger\">RESULTS ARE OUT OF\n                  DATE</b>\n              </div>\n            </div>\n            <div class=\"col-sm-4\">\n              <h5 class=\"montserat-font\">Bacteria Data Graph</h5>\n              <div class=\"row mb-1\">\n                <div class=\"col-sm-5\">\n                  <div class=\"montserat-font\">Data Time Period</div>\n                  <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\n                    <option value=\"30\" @click=\"daysButtonClick($event, 30)\">30 days</option>\n                    <option value=\"60\" @click=\"daysButtonClick($event, 60)\">60 days</option>\n                    <option value=\"90\" @click=\"daysButtonClick($event, 90)\">90 days</option>\n                    <option value=\"365\" @click=\"daysButtonClick($event, 365)\">365 days</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"haveWQData\" class=\"row\">\n                <div class=\"col\" v-show=\"chartType === 'pie'\">\n                  <div ref=\"pie_chart_column\" class=\"full-graph\">\n                    <WQPlot ref=\"station_pie_chart\"\n                            :chart_options=\"pie_chart_options\"\n                            id='station_pie_chart'\n                            :station_data=\"pie_chart_data\"\n                            height=250>\n                    </WQPlot>\n                  </div>\n                </div>\n                <div class=\"col\" v-show=\"chartType === 'scatter'\">\n                  <div ref=\"scatter_chart_column\" class=\"full-graph\">\n                    <WQPlot ref=\"station_scatter_plot\"\n                            :chart_options=\"scatter_chart_options\"\n                            id='station_scatter_plot'\n                            :station_data=\"scatter_plot_data\"\n                            height=250>\n                    </WQPlot>\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"row\" style=\"height: 250px\">\n                <h4>No data for the time period, select a longer time period below.</h4>\n              </div>\n              <div class=\"row mt-1\">\n                <div class=\"col-sm-7\">\n                  <div class=\"montserat-font\">Chart Type</div>\n\n                  <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"PieChart\" id=\"piechart\"\n                           @click=\"chartTypesButtonClick($event, 'pie')\"\n                           :checked=\"chartTypeBtn === 'pie' ? true : false\">\n                    <label class=\"form-check-label\" for=\"piechart\">Pie Chart</label>\n                  </div>\n                  <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ScatterChart\" id=\"scatterplot\"\n                           @click=\"chartTypesButtonClick($event,'scatter')\"\n                           :checked=\"chartTypeBtn === 'scatter' ? true : false\">\n                    <label class=\"form-check-label\" for=\"scatterplot\">Scatter Plot</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <CollectionProgramModal program_type='Water Quality' v-show=\"showBacteriaModal\" @close-collection-modal=\"showBacteriaModal = false\"/>\n        </div>\n      </div>\n    </div>\n    --->\n    <div class=\"row gy-0\">\n      <div class=\"col-sm-12\">\n        <hr>\n        <div class=\"fs-4\">Current Conditions</div>\n\n        <div v-if=\"site_feature !== undefined\">\n          <NWSAlerts :latitude=\"site_latitude\"\n                     :longitude=\"site_longitude\"\n                     :post_code=\"site_post_code\">\n\n          </NWSAlerts>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport FeatureUtils from \"../utilities/feature_funcs\";\n\nimport DataAPI from \"../utilities/rest_api\";\n\n//import WQPlot from \"@/components/scatter_plot\";\nimport Highcharts from 'highcharts';\nimport Icon from 'ol/style/Icon';\nimport Style from 'ol/style/Style';\nimport NWSAlerts from \"@/components/nws_alerts\";\n\nimport none_marker from '@/assets/images/none_marker_25x25.png';\nimport low_marker from '@/assets/images/low_marker_25x25.png';\nimport high_marker from '@/assets/images/high_marker_25x25.png';\n\nimport NowcastInfoModal from '@/components/nowcast_info_page';\nimport CollectionProgramModal from '@/components/collection_progam_page';\n\nexport default {\n  name: 'StationPage',\n  props: {\n    'feature': {type: Object, default: undefined},\n    'site_name': {type: String, default: undefined},\n    'site_id': {type: String, default: undefined},\n    'graph_data': {\n      type: Array, default: function () {\n        return []\n      }\n    }\n  },\n  components: {\n    //WQPlot,\n    NWSAlerts,\n    NowcastInfoModal,\n    CollectionProgramModal\n  },\n  data() {\n    return {\n      loading: true,\n      wq_info_active: true,\n      graph_active: false,\n      feature_data: undefined,\n      zoom: 15,\n      center: [0, 0],\n      rotation: 0,\n      init_graph_height: 250,\n      init_graph_width: 250,\n      graph_width: 250,\n      graph_height: 250,\n\n      activeBtn: 60,\n      chartTypeBtn: 'pie',\n      //graph_data: [],\n      chart_data: [],\n      scatter_plot_data: [],\n      pie_chart_data: [],\n      scatter_chart_ref: undefined,\n      pie_chart_ref: undefined,\n      records_above_max_threshold: 0,\n      percentage_exceeds: 0,\n      total_records: 0,\n      scatter_chart_options: {\n        chart: {\n          //backgroundColor: 'rgba(0,0,0,0)',\n          defaultSeriesType: 'scatter',\n          marginRight: 0,\n          marginLeft: 65,\n          marginTop: 20\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        colors: ['#333333'],\n        xAxis: {\n          endOnTick: true,\n          showLastLabel: false,\n          title: {\n            text: 'Date',\n            offset: 30\n          },\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            day: '%e %b \\'%y',\n            week: '%e %b \\'%y',\n            month: '%e %b \\'%y',\n            year: '%e %b \\'%y',\n          },\n          labels: {\n            rotation: 0,\n            y: 20\n          },\n          tickWidth: 0\n        },\n        yAxis: {\n          type: 'logarithmic',\n          showFirstLabel: false,\n          tickPositioner: function (min, max) {\n            min;\n            max;\n            var ticks = [1, 10, 100, 1000, 10000],\n                i = ticks.length;\n\n            while (i--)\n              ticks[i] = this.val2lin(ticks[i]);\n\n            return ticks;\n          },\n          labels: {\n            formatter: function () {\n              return this.value < 10 ? 1 : this.value;\n            },\n            style: {\n              \"color\": \"#FFFFFF\"\n            }\n          },\n          gridLineWidth: 0,\n          lineWidth: 1,\n          title: {\n            text: 'Bacteria per 100 mL',\n            margin: 0\n          },\n          //If we launch this component from the map interface, we'll have the limits for the plot bands.\n          //If we come in from a direct link, we will have to wait until the data is pulled in the mount()\n          //function.\n          plotBands: [\n            {\n              color: '#96ca2d',\n              from: this.$store.state.advisory_limits.low ? this.$store.state.advisory_limits.low.minimum : 0.0,\n              to: this.$store.state.advisory_limits.hi ? this.$store.state.advisory_limits.hi.minimum : 0.0\n            },\n            {\n              color: '#DB1A0F',\n              from: this.$store.state.advisory_limits.hi ? this.$store.state.advisory_limits.hi.minimum : 0.0,\n              to: 10000\n            }\n          ]\n        },\n        tooltip: {\n          formatter: function () {\n            return '<strong>Date:</strong> ' + Highcharts.dateFormat('%e %B %Y', this.x) + '<br /><strong>Bacteria level:</strong> ' + Math.round(this.y);\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [{\n          name: 'Station',\n          data: []\n        }]\n\n      },\n      pie_chart_options:\n          {\n            chart: {\n              backgroundColor: '#FFFFFF',\n              //backgroundColor: '#003D7ED8',\n              //plotBackgroundColor: null,\n              //plotBorderWidth: null,\n              //plotShadow: false,\n              type: 'pie'\n            },\n            title: {\n              text: null,\n            },\n            /*tooltip: {\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },*/\n            /*accessibility: {\n              point: {\n                valueSuffix: '%'\n              }\n            },*/\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                size: \"95 %\",\n                dataLabels: {\n                  enabled: true,\n                  format: '<b>{point.name}</b>: {point.y}',\n                  color: '#000000'\n                }\n              }\n            },\n            series: [{\n              name: 'Sample Counts',\n              colorByPoint: true,\n              data: []\n            }]\n          },\n      activeBacteriaModal: undefined,\n      activeBacteriaModalName: undefined,\n      showBacteriaModal: false,\n      showNowCastModal: false\n    }\n  },\n  mounted() {\n    console.debug(\"StationGraph mounted.\");\n    let vm = this;\n    if (this.site_name === undefined) {\n      this.site_name = this.$store.state.site_name;\n      this.site_id = this.$store.state.station_name;\n      //If we navigate directly to this station, we'll need to go get data.\n      DataAPI.GetSitesPromise(this.site_name, this.site_id, true, true).then(features => {\n        console.debug(\"Retrieved: \" + features.data.sites.features.length + \" features\");\n        vm.features = features.data.sites.features;\n        for (const ndx in vm.features) {\n          let site = vm.features[ndx];\n          if (vm.site_id == site.properties.site_name) {\n            vm.feature = site;\n            vm.center = vm.feature.geometry.coordinates;\n            break;\n          }\n        }\n        if ('limits' in features.data.advisory_info) {\n          this.$store.commit('updateAdvisoryLimits', features.data.advisory_info.limits);\n        }\n        vm.scatter_chart_options.yAxis.plotBands[0].from = vm.$store.state.advisory_limits.low.minimum;\n        vm.scatter_chart_options.yAxis.plotBands[0].to = vm.$store.state.advisory_limits.low.maximum;\n        vm.scatter_chart_options.yAxis.plotBands[1].from = vm.$store.state.advisory_limits.hi.minimum;\n        vm.loading = false;\n        //We pull the last 60 days worth of data to show.\n        vm.pastData(60);\n      });\n    } else {\n      this.loading = false;\n      //We pull the last 60 days worth of data to show.\n      this.pastData(60);\n    }\n\n    //this.scatter_chart_ref = this.$refs.station_scatter_graph;\n    //this.pie_chart_ref = this.$refs.station_pie_chart;\n  },\n  methods: {\n    styleFunction: function () {\n      var siteStyleFunction = function (feature, resolution) {\n        console.debug(\"siteStyleFunction called.\")\n        feature;\n        resolution;\n        let icon_scale = 0.75;\n        let icon = new Icon({\n          src: none_marker,\n          scale: icon_scale\n        });\n        let icon_style = [\n          new Style({\n            image: icon,\n          })\n        ];\n\n        return (icon_style);\n      }\n      return (siteStyleFunction);\n    },\n    getAdvisoryImage() {\n      let img_src = none_marker;\n      if (this.feature !== undefined) {\n        //If the data is too old, we use the none marker.\n        let properties = this.feature.properties;\n        let site_type = this.feature.properties.site_type;\n        let dataFresh = FeatureUtils.isDataFresh(properties[site_type].advisory);\n        if (dataFresh) {\n          if (this.hasAdvisoryData) {\n            let hi_limit = this.$store.state.advisory_limits.hi;\n            let lo_limit = this.$store.state.advisory_limits.low;\n            let value = this.advisoryValue;\n            if (value >= hi_limit.minimum) {\n              img_src = high_marker;\n            } else if (value < lo_limit.maximum) {\n              img_src = low_marker;\n            }\n          }\n        }\n      }\n      return img_src;\n    },\n    isDataFresh: function (data_type) {\n      if (this.feature) {\n        let properties = this.feature.properties;\n        let site_type = this.feature.properties.site_type;\n        if (data_type == 'advisory') {\n          return (FeatureUtils.isDataFresh(properties[site_type].advisory));\n        } else if (data_type == 'nowcasts') {\n          return (FeatureUtils.isDataFresh(properties[site_type].nowcasts));\n        }\n      }\n    },\n    daysButtonClick(button_clicked, days) {\n      this.activeBtn = days;  //We use this to toggle the active class on the button.≠≠\n      this.pastData(days);\n    },\n    chartTypesButtonClick(button_clicked, chart_type) {\n      console.debug(\"chartTypesButtonClick called, chart type: \" + chart_type);\n      this.chartType = chart_type;\n      if (chart_type === 'scatter') {\n        if (this.scatter_chart_ref === undefined) {\n          this.scatter_chart_ref = this.$refs.station_scatter_graph;\n          this.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(this.activeBtn, \"days\").valueOf(), moment.utc().valueOf());\n        }\n      } else {\n        if (this.$refs.station_pie_chart == undefined) {\n          this.pie_chart_ref = this.$refs.station_pie_chart;\n        }\n      }\n    },\n    pastData(days_back) {\n      console.debug(\"Retrieving: \" + days_back + \" days of data.\")\n      let vm = this;\n      let location_site_name = this.$store.state.site_name;\n      let start_date = moment().subtract(days_back, 'days').format(\"YYYY-MM-DD 00:00:00\");\n      let end_date = moment.utc().format(\"YYYY-MM-DD HH:mm:ss\");\n      //this.graph_data = [];\n      this.pie_chart_data = [];\n      this.scatter_plot_data = [];\n      DataAPI.GetSiteData(location_site_name, this.site_id, start_date, end_date)\n          .then(response => {\n            vm.feature_data = response.data;\n            let site_type = vm.feature_data.properties.site_type;\n            if (site_type in vm.feature_data.properties) {\n              vm.feature_data.properties[site_type].advisory.results.forEach(function (rec) {\n                let date_val = moment(rec.date);\n                vm.scatter_plot_data.push([date_val.valueOf(), rec.value]);\n              });\n              if (vm.scatter_chart_ref !== undefined) {\n                vm.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(days_back, \"days\").valueOf(), moment.utc().valueOf());\n              }\n              vm.calcStats(vm, vm.scatter_plot_data);\n            }\n          })\n          .catch(error => console.error(error));\n\n    },\n    calcStats(vm, data_array) {\n      console.debug(\"calcStats called.\");\n      vm.records_above_max_threshold = 0;\n      vm.total_records = 0;\n      if (data_array.length) {\n        data_array.forEach(function (rec) {\n          if (rec[1] >= vm.$store.state.advisory_limits.hi.minimum) {\n            vm.records_above_max_threshold += 1;\n          }\n        });\n        vm.total_records = data_array.length;\n        vm.pie_chart_data = [\n          {\n            name: 'Sample Count',\n            y: vm.total_records,\n            color: 'blue'\n          },\n          {\n            name: 'Samples Above Limit',\n            y: vm.records_above_max_threshold,\n            color: 'red'\n          }\n        ]\n        vm.percentage_exceeds = parseInt((vm.records_above_max_threshold / vm.total_records) * 100.0);\n        console.debug(\"Total Samples: \" + vm.total_records + \"Bad Samples: \" + vm.records_above_max_threshold);\n      }\n    },\n    onClose() {\n      console.debug(\"onClose modal_graph_closed event emitted.\");\n      this.$emit(\"modal_graph_closed\");\n    },\n    bacteriaPopup() {\n      console.debug(\"bacteriaPopup clicked.\");\n      /*temporay until we get the states into the database*/\n      /*\n      let sc_sites = ['charleston', 'myrtlebeach', 'follybeach', 'surfside'];\n      let nc_sites = ['killdevilhills'];\n      let fl_sites = ['sarasota'];\n      this.activeBacteriaModalName = '';\n      this.activeBacteriaModal = undefined;\n      if (sc_sites.includes(this.$store.state.site_name)) {\n        this.activeBacteriaModalName = \"sc_bacteria_data_modal\";\n        this.activeBacteriaModal = \"SCDHECBacteriaPopup\";\n      }\n      else if (nc_sites.includes(this.$store.state.site_name)) {\n        this.activeBacteriaModalName = \"nc_bacteria_data_modal\";\n        this.activeBacteriaModal = \"NCBacteriaPopup\";\n      }\n      else if (fl_sites.includes(this.$store.state.site_name)) {\n        this.activeBacteriaModalName = \"fl_bacteria_data_modal\";\n        this.activeBacteriaModal = \"FLBacteriaPopup\";\n      }\n      */\n      //this.$bvModal.show(this.activeBacteriaModalName);\n      this.showBacteriaModal = true;\n    },\n    clickNowCastInfo() {\n      this.showNowCastModal = true;\n      console.debug(\"clickNowCastInfo clicked.\");\n    },\n    alert_text_color: function(level) {\n      let text_color = '';\n\n      if(level == \"LOW\")\n      {\n        text_color = 'no_alert';\n      }\n      else if(level == \"HIGH\")\n      {\n        text_color = 'warning';\n      }\n      else {\n        text_color = 'no_data'\n      }\n      return text_color;\n    }\n  },\n\n  watch: {},\n  computed: {\n    site_post_code: function() {\n      if (this.feature !== undefined) {\n        return (this.feature.properties.post_code)\n      }\n      return ('');\n    },\n    site_longitude: function () {\n      if (this.feature !== undefined) {\n        return (this.feature.geometry.coordinates[0])\n      }\n      return (-1.0);\n    },\n    site_latitude: function () {\n      if (this.feature !== undefined) {\n        return (this.feature.geometry.coordinates[1])\n      }\n      return (-1.0);\n    },\n    site_feature: function () {\n      if (this.feature !== undefined) {\n        return ([this.feature]);\n      }\n      return (undefined);\n    },\n    site_description: function () {\n      if (this.feature !== undefined) {\n        return (this.feature.properties.description);\n      }\n      return (\"\");\n    },\n    chartType: {\n      get: function () {\n        return this.chartTypeBtn;\n      },\n      set: function (chart_type) {\n        this.chartTypeBtn = chart_type;\n      }\n    },\n    show_bacteria_results: function() {\n      return(false);\n    },\n    hasAdvisoryData: function () {\n      console.debug(\"hasAdvisoryData started.\");\n      if (this.feature !== undefined) {\n        let site_type = this.feature.properties.site_type;\n        if (site_type in this.feature.properties) {\n          if ('advisory' in this.feature.properties[site_type]) {\n            console.debug(\"hasAdvisoryData is true.\");\n            return (true);\n          }\n        }\n      }\n      console.debug(\"hasAdvisoryData is false.\");\n      return (false);\n    },\n    advisoryDate: function () {\n      console.debug(\"advisoryDate started.\");\n      let date_str = \"\";\n      try {\n        if (this.feature !== undefined) {\n          if (this.hasAdvisoryData) {\n            let site_type = this.feature.properties.site_type;\n            let date_obj = moment(this.feature.properties[site_type].advisory.date);\n            if(date_obj.isValid()) {\n              date_str = date_obj.format(\"MMMM Do YYYY\");\n            }\n          }\n        }\n      }\n      catch(error)\n      {\n        console.error(error);\n      }\n      console.debug(\"advisoryDate returning: \" + date_str);\n      return(date_str);\n    },\n    advisoryValue: function () {\n      console.debug(\"advisoryValue started.\");\n      let advisory_level = '';\n      let value = undefined;\n      if (this.feature !== undefined) {\n        if (this.hasAdvisoryData) {\n          let site_type = this.feature.properties.site_type;\n          try {\n             value = parseInt(this.feature.properties[site_type].advisory.value, 10);\n          }\n          catch(error) {\n            console.error(error);\n          }\n          advisory_level = \"NO DATA\";\n          if(value !== undefined && !isNaN(value)) {\n            if (value > this.$store.state.advisory_limits.hi.minimum) {\n              advisory_level = \"HIGH\"\n            } else {\n              advisory_level = \"LOW\"\n            }\n          }\n        }\n      }\n      console.debug(\"advisoryValue returning: \" + value);\n      return (advisory_level);\n    },\n    hasNowcastData: function () {\n      console.debug(\"hasNowcastData started.\");\n      if (this.feature !== undefined) {\n        let site_type = this.feature.properties.site_type;\n        if (site_type in this.feature.properties) {\n          if ('nowcasts' in this.feature.properties[site_type]) {\n            console.debug(\"hasNowcastData is true.\");\n            return (true);\n          }\n        }\n      }\n      console.debug(\"hasNowcastData is false.\");\n      return (false);\n    },\n    nowcastsDate: function () {\n      console.debug(\"nowcastsDate started.\");\n      let date_str = \"\";\n      try {\n        if (this.feature !== undefined) {\n          if (this.hasAdvisoryData) {\n            let site_type = this.feature.properties.site_type;\n            let date_obj = moment(this.feature.properties[site_type].nowcasts.date);\n            if(date_obj.isValid()) {\n              date_str = date_obj.format(\"MMMM Do YYYY\");\n            }\n          }\n        }\n      }\n      catch(error) {\n        console.error(error);\n      }\n      console.debug(\"nowcastsDate returning: \" + date_str);\n      return (date_str);\n    },\n    nowcastsValue: function () {\n      console.debug(\"nowcastsValue started.\");\n      if (this.feature !== undefined) {\n        if (this.hasAdvisoryData) {\n          let site_type = this.feature.properties.site_type;\n          let level = this.feature.properties[site_type].nowcasts.level;\n          console.debug(\"nowcastsValue returning: \" + level);\n          return (level);\n        }\n      }\n      console.debug(\"nowcastsValue returning: \");\n      return (\"\");\n    },\n    haveWQData: function () {\n      if (this.scatter_plot_data.length) {\n        return (true);\n      }\n      return (false);\n    }\n  }\n}\n</script>\n<style scoped>\n.min-width-map-column {\n  min-width: 250px;\n}\n.data-graph {\n  background-color: rgba(0, 61, 126, .85);\n  color: #003D7ED8\n  /*color: #FFFFFF*/\n}\n\n.page-background {\n  background-color: #FFFFFF;\n  /*background-color: #003D7ED8;*/\n}\n</style>\n"],"mappings":"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"}]}