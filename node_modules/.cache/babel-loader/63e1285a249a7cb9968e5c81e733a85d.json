{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/limits.js","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/limits.js","mtime":1682360357854},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682361371663},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/eslint-loader/index.js","mtime":1682361370726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGFucmFtYWdlL0RvY3VtZW50cy93b3Jrc3BhY2UvV2F0ZXJRdWFsaXR5L1JpdmVyV1FGcm9udEVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9kYW5yYW1hZ2UvRG9jdW1lbnRzL3dvcmtzcGFjZS9XYXRlclF1YWxpdHkvUml2ZXJXUUZyb250RW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7Cgp2YXIgd3FfbGltaXQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnMKICBmdW5jdGlvbiB3cV9saW1pdCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCB3cV9saW1pdCk7CgogICAgdGhpcy5taW5pbXVtID0gdW5kZWZpbmVkOwogICAgdGhpcy5tYXhpbXVtID0gdW5kZWZpbmVkOwogICAgdGhpcy5pY29uID0gdW5kZWZpbmVkOwogIH0KCiAgX2NyZWF0ZUNsYXNzKHdxX2xpbWl0LCBbewogICAga2V5OiAibWluaW11bSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX21pbmltdW07CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQobWluKSB7CiAgICAgIHRoaXMuX21pbmltdW0gPSBtaW47CiAgICB9CiAgfSwgewogICAga2V5OiAibWF4aW11bSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX21heGltdW07CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQobWF4KSB7CiAgICAgIHRoaXMuX21heGltdW0gPSBtYXg7CiAgICB9CiAgfSwgewogICAga2V5OiAiaWNvbiIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX2ljb247CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQoaWNvbikgewogICAgICB0aGlzLl9pY29uID0gaWNvbjsKICAgIH0KICB9XSk7CgogIHJldHVybiB3cV9saW1pdDsKfSgpOwoKdmFyIEFkdmlzb3J5TGltaXRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzCiAgZnVuY3Rpb24gQWR2aXNvcnlMaW1pdHMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWR2aXNvcnlMaW1pdHMpOwoKICAgIHRoaXMubGltaXRzID0gW107CiAgfQoKICBfY3JlYXRlQ2xhc3MoQWR2aXNvcnlMaW1pdHMsIFt7CiAgICBrZXk6ICJ1cGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShsaW1pdHMpIHsKICAgICAgdGhpcy5saW1pdHMgPSBbXTsKCiAgICAgIGZvciAodmFyIGxpbWl0X3R5cGUgaW4gbGltaXRzKSB7CiAgICAgICAgdmFyIGxpbWl0ID0gbmV3IHdxX2xpbWl0KCk7CiAgICAgICAgbGltaXQubWluaW11bSA9IGxpbWl0c1tsaW1pdF90eXBlXS5taW5fbGltaXQ7CiAgICAgICAgbGltaXQubWF4aW11bSA9IGxpbWl0c1tsaW1pdF90eXBlXS5tYXhfbGltaXQ7CiAgICAgICAgbGltaXQuaWNvbiA9IGxpbWl0c1tsaW1pdF90eXBlXS5pY29uOwogICAgICAgIHRoaXMubGltaXRzW2xpbWl0X3R5cGVdID0gbGltaXQ7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJsaW1pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbGltaXQobGltaXRfbGV2ZWwpIHsKICAgICAgY29uc29sZS5kZWJ1ZygiQWR2aXNvcnlMaW1pdHMgbGltaXQgY2FsbGVkOiAiICsgbGltaXRfbGV2ZWwpOwoKICAgICAgaWYgKGxpbWl0X2xldmVsIGluIHRoaXMubGltaXRzKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubGltaXRzW2xpbWl0X2xldmVsXTsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfSwgewogICAga2V5OiAibG93IiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5saW1pdCgnTG93Jyk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWVkaXVtIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5saW1pdCgnTWVkaXVtJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaGkiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLmxpbWl0KCdIaWdoJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAibm9uZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMubGltaXQoJ05vIGRhdGEnKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBZHZpc29yeUxpbWl0czsKfSgpOwoKZXhwb3J0IHsgQWR2aXNvcnlMaW1pdHMgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/limits.js"],"names":["wq_limit","minimum","undefined","maximum","icon","_minimum","min","_maximum","max","_icon","AdvisoryLimits","limits","limit_type","limit","min_limit","max_limit","limit_level","console","debug"],"mappings":";;;IAAMA,Q;AAAW;AACb,sBAAc;AAAA;;AACV,SAAKC,OAAL,GAAeC,SAAf;AACA,SAAKC,OAAL,GAAeD,SAAf;AACA,SAAKE,IAAL,GAAYF,SAAZ;AACH;;;;SAID,eAAc;AACV,aAAO,KAAKG,QAAZ;AACH,K;SALD,aAAYC,GAAZ,EAAiB;AACb,WAAKD,QAAL,GAAgBC,GAAhB;AACH;;;SAOD,eAAc;AACV,aAAO,KAAKC,QAAZ;AACH,K;SALD,aAAYC,GAAZ,EAAiB;AACb,WAAKD,QAAL,GAAgBC,GAAhB;AACH;;;SAOD,eAAW;AACP,aAAO,KAAKC,KAAZ;AACH,K;SALD,aAASL,IAAT,EAAe;AACX,WAAKK,KAAL,GAAaL,IAAb;AACH;;;;;;IAKgBM,c;AAAiB;AAClC,4BAAc;AAAA;;AACV,SAAKC,MAAL,GAAc,EAAd;AACH;;;;WACD,gBAAOA,MAAP,EAAe;AACX,WAAKA,MAAL,GAAc,EAAd;;AACA,WAAI,IAAMC,UAAV,IAAwBD,MAAxB,EAAgC;AAC5B,YAAIE,KAAK,GAAG,IAAIb,QAAJ,EAAZ;AACAa,QAAAA,KAAK,CAACZ,OAAN,GAAgBU,MAAM,CAACC,UAAD,CAAN,CAAmBE,SAAnC;AACAD,QAAAA,KAAK,CAACV,OAAN,GAAgBQ,MAAM,CAACC,UAAD,CAAN,CAAmBG,SAAnC;AACAF,QAAAA,KAAK,CAACT,IAAN,GAAaO,MAAM,CAACC,UAAD,CAAN,CAAmBR,IAAhC;AACA,aAAKO,MAAL,CAAYC,UAAZ,IAA0BC,KAA1B;AACH;AAEJ;;;WACD,eAAMG,WAAN,EAAmB;AACfC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAkCF,WAAhD;;AACA,UAAGA,WAAW,IAAI,KAAKL,MAAvB,EACA;AACI,eAAO,KAAKA,MAAL,CAAYK,WAAZ,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;;SAED,eAAU;AACN,aAAO,KAAKH,KAAL,CAAW,KAAX,CAAP;AACH;;;SACD,eAAa;AACT,aAAO,KAAKA,KAAL,CAAW,QAAX,CAAP;AACH;;;SACD,eAAS;AACL,aAAO,KAAKA,KAAL,CAAW,MAAX,CAAP;AACH;;;SACD,eAAW;AACP,aAAO,KAAKA,KAAL,CAAW,SAAX,CAAP;AACH;;;;;;SAnCgBH,c","sourcesContent":["class wq_limit { // eslint-disable-line no-unused-vars\n    constructor() {\n        this.minimum = undefined;\n        this.maximum = undefined;\n        this.icon = undefined;\n    }\n    set minimum(min) {\n        this._minimum = min\n    }\n    get minimum() {\n        return this._minimum;\n    }\n    set maximum(max) {\n        this._maximum = max\n    }\n    get maximum() {\n        return this._maximum;\n    }\n    set icon(icon) {\n        this._icon = icon;\n    }\n    get icon() {\n        return this._icon;\n    }\n}\nexport default class AdvisoryLimits { // eslint-disable-line no-unused-vars\n    constructor() {\n        this.limits = [];\n    }\n    update(limits) {\n        this.limits = [];\n        for(const limit_type in limits) {\n            let limit = new wq_limit();\n            limit.minimum = limits[limit_type].min_limit;\n            limit.maximum = limits[limit_type].max_limit;\n            limit.icon = limits[limit_type].icon;\n            this.limits[limit_type] = limit;\n        }\n\n    }\n    limit(limit_level) {\n        console.debug(\"AdvisoryLimits limit called: \" + limit_level);\n        if(limit_level in this.limits)\n        {\n            return this.limits[limit_level];\n        }\n        return null;\n    }\n\n    get low() {\n        return this.limit('Low');\n    }\n    get medium() {\n        return this.limit('Medium');\n    }\n    get hi() {\n        return this.limit('High');\n    }\n    get none() {\n        return this.limit('No data');\n    }\n}\n"]}]}