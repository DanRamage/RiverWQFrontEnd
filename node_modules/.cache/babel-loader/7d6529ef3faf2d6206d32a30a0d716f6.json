{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_popup.vue","mtime":1682360357860},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682361371663},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682361372188}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["station_popup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"montserat-font container page-background data-graph\">\n    <div class=\"row mt-3\">\n      <div class=\"col-sm-12 mt-5\">\n        <div class=\"font-avenir fs-4\">\n          <div>Water Quality Site: {{ site_description }}</div>\n          <div>Site ID: {{ site_id }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-3 min-width-map-column\">\n        <div v-if=\"feature !== undefined\" style=\"height: 250px; width: 250px\">\n          <vl-map id=\"single_site_map\"\n                  ref=\"single_site_map\"\n                  :load-tiles-while-animating=\"true\"\n                  :load-tiles-while-interacting=\"true\"\n                  data-projection=\"EPSG:4326\">\n            <vl-view :zoom.sync=\"zoom\" :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\n            <vl-layer-tile>\n              <vl-source-xyz url=\"https://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}\"\n                             attributions=\"\"/>\n            </vl-layer-tile>\n            <vl-layer-vector id=\"site\">\n              <vl-source-vector ref=\"site_vector_layer\" :features.sync=\"site_feature\"></vl-source-vector>\n              <vl-style-func :factory=\"styleFunction\"></vl-style-func>\n            </vl-layer-vector>\n          </vl-map>\n\n        </div>\n      </div>\n      <div class=\"col-sm-9\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 mt-3 m-lg-3\">\n            <div v-if=\"hasNowcastData\">\n              <div class=\"fs-4\">\n                <a @click=\"clickNowCastInfo\">Nowcast <i class=\"bi bi-info-circle info-icon\"></i></a>\n              </div>\n              <p>\n                <span class=\"ms-5 fs-5\">Nowcast for {{ nowcastsDate }}: <span :class=\"alert_text_color(nowcastsValue)\"> {{ nowcastsValue }}</span></span>\n                <br>\n                <span class=\"ml-4 avenir-font-light\"></span>\n                <br>\n                <b v-if='isDataFresh(\"nowcasts\") == false' class=\"ml-4 avenir-font-light text-danger\">RESULTS ARE OUT OF\n                  DATE</b>\n              </p>\n            </div>\n            <NowcastInfoModal ref=\"nowcast_modal\" v-show=\"showNowCastModal\" @close-nowcast-modal=\"showNowCastModal = false\" />\n          </div>\n        </div>\n        <div v-if=\"show_bacteria_results\" class=\"row\">\n          <div class=\"col-sm-12 mt-3 m-lg-3\">\n            <div class=\"fs-4\">\n              <a @click=\"bacteriaPopup\">Sampled Bacteria Data <i class=\"bi bi-info-circle info-icon\"></i></a>\n            </div>\n            <div v-if=\"!loading\">\n              <div v-if=\"hasAdvisoryData\">\n                  <div class=\"ms-5 fs-5\">\n                    Bacteria Data for {{ advisoryDate }}: <span :class=\"alert_text_color(advisoryValue)\">{{ advisoryValue }}</span>\n                  </div>\n                  <div class=\"ms-5 fs-5\">\n                    <b v-if='isDataFresh(\"advisory\") == false' class=\"avenir-font-light text-danger\">RESULTS ARE OUT OF\n                      DATE</b>\n                  </div>\n              </div>\n            </div>\n          </div>\n          <CollectionProgramModal program_type='Water Quality' v-show=\"showBacteriaModal\" @close-collection-modal=\"showBacteriaModal = false\"/>\n\n        </div>\n      </div>\n    </div>\n    <!---\n    <div class=\"row gy-0\">\n      <div class=\"col-12\">\n        <hr>\n        <div class=\"row\">\n          <div v-if=\"hasNowcastData\">\n            <div class=\"col mt-3\">\n              <div class=\"fs-6\">\n                <a @click=\"clickNowCastInfo\">Nowcast <i class=\"bi bi-info-circle info-icon\"></i></a>\n              </div>\n              <p>\n                <span class=\"ms-5 fs-6\">Nowcast for {{ nowcastsDate }}: <span :class=\"alert_text_color(nowcastsValue)\"> {{ nowcastsValue }}</span></span>\n                <br>\n                <span class=\"ml-4 avenir-font-light\"></span>\n                <br>\n                <b v-if='isDataFresh(\"nowcasts\") == false' class=\"ml-4 avenir-font-light text-danger\">RESULTS ARE OUT OF\n                  DATE</b>\n              </p>\n            </div>\n            <NowcastInfoModal ref=\"nowcast_modal\" v-show=\"showNowCastModal\" @close-nowcast-modal=\"showNowCastModal = false\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    --->\n    <!---\n    Water quality data row\n    --->\n    <!---\n    <div class=\"row gy-0\">\n      <div class=\"col-sm-12\">\n        <hr>\n        <div class=\"fs-6\">\n          <a @click=\"bacteriaPopup\">Sampled Bacteria Data <i class=\"bi bi-info-circle info-icon\"></i></a>\n        </div>\n        <div v-if=\"!loading\">\n          <div v-if=\"hasAdvisoryData\" class=\"row\">\n            <div class=\"col-sm-4\">\n              <div class=\"ms-5 fs-6\">\n                Bacteria Data for {{ advisoryDate }}: <span :class=\"alert_text_color(advisoryValue)\">{{ advisoryValue }}</span>\n              </div>\n              <div class=\"ms-5 fs-6\">\n                <b v-if='isDataFresh(\"advisory\") == false' class=\"avenir-font-light text-danger\">RESULTS ARE OUT OF\n                  DATE</b>\n              </div>\n            </div>\n            <div class=\"col-sm-4\">\n              <h5 class=\"montserat-font\">Bacteria Data Graph</h5>\n              <div class=\"row mb-1\">\n                <div class=\"col-sm-5\">\n                  <div class=\"montserat-font\">Data Time Period</div>\n                  <select class=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\n                    <option value=\"30\" @click=\"daysButtonClick($event, 30)\">30 days</option>\n                    <option value=\"60\" @click=\"daysButtonClick($event, 60)\">60 days</option>\n                    <option value=\"90\" @click=\"daysButtonClick($event, 90)\">90 days</option>\n                    <option value=\"365\" @click=\"daysButtonClick($event, 365)\">365 days</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"haveWQData\" class=\"row\">\n                <div class=\"col\" v-show=\"chartType === 'pie'\">\n                  <div ref=\"pie_chart_column\" class=\"full-graph\">\n                    <WQPlot ref=\"station_pie_chart\"\n                            :chart_options=\"pie_chart_options\"\n                            id='station_pie_chart'\n                            :station_data=\"pie_chart_data\"\n                            height=250>\n                    </WQPlot>\n                  </div>\n                </div>\n                <div class=\"col\" v-show=\"chartType === 'scatter'\">\n                  <div ref=\"scatter_chart_column\" class=\"full-graph\">\n                    <WQPlot ref=\"station_scatter_plot\"\n                            :chart_options=\"scatter_chart_options\"\n                            id='station_scatter_plot'\n                            :station_data=\"scatter_plot_data\"\n                            height=250>\n                    </WQPlot>\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"row\" style=\"height: 250px\">\n                <h4>No data for the time period, select a longer time period below.</h4>\n              </div>\n              <div class=\"row mt-1\">\n                <div class=\"col-sm-7\">\n                  <div class=\"montserat-font\">Chart Type</div>\n\n                  <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"PieChart\" id=\"piechart\"\n                           @click=\"chartTypesButtonClick($event, 'pie')\"\n                           :checked=\"chartTypeBtn === 'pie' ? true : false\">\n                    <label class=\"form-check-label\" for=\"piechart\">Pie Chart</label>\n                  </div>\n                  <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ScatterChart\" id=\"scatterplot\"\n                           @click=\"chartTypesButtonClick($event,'scatter')\"\n                           :checked=\"chartTypeBtn === 'scatter' ? true : false\">\n                    <label class=\"form-check-label\" for=\"scatterplot\">Scatter Plot</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <CollectionProgramModal program_type='Water Quality' v-show=\"showBacteriaModal\" @close-collection-modal=\"showBacteriaModal = false\"/>\n        </div>\n      </div>\n    </div>\n    --->\n    <div class=\"row gy-0\">\n      <div class=\"col-sm-12\">\n        <hr>\n        <div class=\"fs-4\">Current Conditions</div>\n\n        <div v-if=\"site_feature !== undefined\">\n          <NWSAlerts :latitude=\"site_latitude\"\n                     :longitude=\"site_longitude\"\n                     :post_code=\"site_post_code\">\n\n          </NWSAlerts>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment';\nimport FeatureUtils from \"../utilities/feature_funcs\";\n\nimport DataAPI from \"../utilities/rest_api\";\n\n//import WQPlot from \"@/components/scatter_plot\";\nimport Highcharts from 'highcharts';\nimport Icon from 'ol/style/Icon';\nimport Style from 'ol/style/Style';\nimport NWSAlerts from \"@/components/nws_alerts\";\n\nimport none_marker from '@/assets/images/none_marker_25x25.png';\nimport low_marker from '@/assets/images/low_marker_25x25.png';\nimport high_marker from '@/assets/images/high_marker_25x25.png';\n\nimport NowcastInfoModal from '@/components/nowcast_info_page';\nimport CollectionProgramModal from '@/components/collection_progam_page';\n\nexport default {\n  name: 'StationPage',\n  props: {\n    'feature': {type: Object, default: undefined},\n    'site_name': {type: String, default: undefined},\n    'site_id': {type: String, default: undefined},\n    'graph_data': {\n      type: Array, default: function () {\n        return []\n      }\n    }\n  },\n  components: {\n    //WQPlot,\n    NWSAlerts,\n    NowcastInfoModal,\n    CollectionProgramModal\n  },\n  data() {\n    return {\n      loading: true,\n      wq_info_active: true,\n      graph_active: false,\n      feature_data: undefined,\n      zoom: 15,\n      center: [0, 0],\n      rotation: 0,\n      init_graph_height: 250,\n      init_graph_width: 250,\n      graph_width: 250,\n      graph_height: 250,\n\n      activeBtn: 60,\n      chartTypeBtn: 'pie',\n      //graph_data: [],\n      chart_data: [],\n      scatter_plot_data: [],\n      pie_chart_data: [],\n      scatter_chart_ref: undefined,\n      pie_chart_ref: undefined,\n      records_above_max_threshold: 0,\n      percentage_exceeds: 0,\n      total_records: 0,\n      scatter_chart_options: {\n        chart: {\n          //backgroundColor: 'rgba(0,0,0,0)',\n          defaultSeriesType: 'scatter',\n          marginRight: 0,\n          marginLeft: 65,\n          marginTop: 20\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: null\n        },\n        colors: ['#333333'],\n        xAxis: {\n          endOnTick: true,\n          showLastLabel: false,\n          title: {\n            text: 'Date',\n            offset: 30\n          },\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            day: '%e %b \\'%y',\n            week: '%e %b \\'%y',\n            month: '%e %b \\'%y',\n            year: '%e %b \\'%y',\n          },\n          labels: {\n            rotation: 0,\n            y: 20\n          },\n          tickWidth: 0\n        },\n        yAxis: {\n          type: 'logarithmic',\n          showFirstLabel: false,\n          tickPositioner: function (min, max) {\n            min;\n            max;\n            var ticks = [1, 10, 100, 1000, 10000],\n                i = ticks.length;\n\n            while (i--)\n              ticks[i] = this.val2lin(ticks[i]);\n\n            return ticks;\n          },\n          labels: {\n            formatter: function () {\n              return this.value < 10 ? 1 : this.value;\n            },\n            style: {\n              \"color\": \"#FFFFFF\"\n            }\n          },\n          gridLineWidth: 0,\n          lineWidth: 1,\n          title: {\n            text: 'Bacteria per 100 mL',\n            margin: 0\n          },\n          //If we launch this component from the map interface, we'll have the limits for the plot bands.\n          //If we come in from a direct link, we will have to wait until the data is pulled in the mount()\n          //function.\n          plotBands: [\n            {\n              color: '#96ca2d',\n              from: this.$store.state.advisory_limits.low ? this.$store.state.advisory_limits.low.minimum : 0.0,\n              to: this.$store.state.advisory_limits.hi ? this.$store.state.advisory_limits.hi.minimum : 0.0\n            },\n            {\n              color: '#DB1A0F',\n              from: this.$store.state.advisory_limits.hi ? this.$store.state.advisory_limits.hi.minimum : 0.0,\n              to: 10000\n            }\n          ]\n        },\n        tooltip: {\n          formatter: function () {\n            return '<strong>Date:</strong> ' + Highcharts.dateFormat('%e %B %Y', this.x) + '<br /><strong>Bacteria level:</strong> ' + Math.round(this.y);\n          }\n        },\n        legend: {\n          enabled: false\n        },\n        series: [{\n          name: 'Station',\n          data: []\n        }]\n\n      },\n      pie_chart_options:\n          {\n            chart: {\n              backgroundColor: '#FFFFFF',\n              //backgroundColor: '#003D7ED8',\n              //plotBackgroundColor: null,\n              //plotBorderWidth: null,\n              //plotShadow: false,\n              type: 'pie'\n            },\n            title: {\n              text: null,\n            },\n            /*tooltip: {\n              pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },*/\n            /*accessibility: {\n              point: {\n                valueSuffix: '%'\n              }\n            },*/\n            plotOptions: {\n              pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                size: \"95 %\",\n                dataLabels: {\n                  enabled: true,\n                  format: '<b>{point.name}</b>: {point.y}',\n                  color: '#000000'\n                }\n              }\n            },\n            series: [{\n              name: 'Sample Counts',\n              colorByPoint: true,\n              data: []\n            }]\n          },\n      activeBacteriaModal: undefined,\n      activeBacteriaModalName: undefined,\n      showBacteriaModal: false,\n      showNowCastModal: false\n    }\n  },\n  mounted() {\n    console.debug(\"StationGraph mounted.\");\n    let vm = this;\n    if (this.site_name === undefined) {\n      this.site_name = this.$store.state.site_name;\n      this.site_id = this.$store.state.station_name;\n      //If we navigate directly to this station, we'll need to go get data.\n      DataAPI.GetSitesPromise(this.site_name, this.site_id, true, true).then(features => {\n        console.debug(\"Retrieved: \" + features.data.sites.features.length + \" features\");\n        vm.features = features.data.sites.features;\n        for (const ndx in vm.features) {\n          let site = vm.features[ndx];\n          if (vm.site_id == site.properties.site_name) {\n            vm.feature = site;\n            vm.center = vm.feature.geometry.coordinates;\n            break;\n          }\n        }\n        if ('limits' in features.data.advisory_info) {\n          this.$store.commit('updateAdvisoryLimits', features.data.advisory_info.limits);\n        }\n        vm.scatter_chart_options.yAxis.plotBands[0].from = vm.$store.state.advisory_limits.low.minimum;\n        vm.scatter_chart_options.yAxis.plotBands[0].to = vm.$store.state.advisory_limits.low.maximum;\n        vm.scatter_chart_options.yAxis.plotBands[1].from = vm.$store.state.advisory_limits.hi.minimum;\n        vm.loading = false;\n        //We pull the last 60 days worth of data to show.\n        vm.pastData(60);\n      });\n    } else {\n      this.loading = false;\n      //We pull the last 60 days worth of data to show.\n      this.pastData(60);\n    }\n\n    //this.scatter_chart_ref = this.$refs.station_scatter_graph;\n    //this.pie_chart_ref = this.$refs.station_pie_chart;\n  },\n  methods: {\n    styleFunction: function () {\n      var siteStyleFunction = function (feature, resolution) {\n        console.debug(\"siteStyleFunction called.\")\n        feature;\n        resolution;\n        let icon_scale = 0.75;\n        let icon = new Icon({\n          src: none_marker,\n          scale: icon_scale\n        });\n        let icon_style = [\n          new Style({\n            image: icon,\n          })\n        ];\n\n        return (icon_style);\n      }\n      return (siteStyleFunction);\n    },\n    getAdvisoryImage() {\n      let img_src = none_marker;\n      if (this.feature !== undefined) {\n        //If the data is too old, we use the none marker.\n        let properties = this.feature.properties;\n        let site_type = this.feature.properties.site_type;\n        let dataFresh = FeatureUtils.isDataFresh(properties[site_type].advisory);\n        if (dataFresh) {\n          if (this.hasAdvisoryData) {\n            let hi_limit = this.$store.state.advisory_limits.hi;\n            let lo_limit = this.$store.state.advisory_limits.low;\n            let value = this.advisoryValue;\n            if (value >= hi_limit.minimum) {\n              img_src = high_marker;\n            } else if (value < lo_limit.maximum) {\n              img_src = low_marker;\n            }\n          }\n        }\n      }\n      return img_src;\n    },\n    isDataFresh: function (data_type) {\n      if (this.feature) {\n        let properties = this.feature.properties;\n        let site_type = this.feature.properties.site_type;\n        if (data_type == 'advisory') {\n          return (FeatureUtils.isDataFresh(properties[site_type].advisory));\n        } else if (data_type == 'nowcasts') {\n          return (FeatureUtils.isDataFresh(properties[site_type].nowcasts));\n        }\n      }\n    },\n    daysButtonClick(button_clicked, days) {\n      this.activeBtn = days;  //We use this to toggle the active class on the button.≠≠\n      this.pastData(days);\n    },\n    chartTypesButtonClick(button_clicked, chart_type) {\n      console.debug(\"chartTypesButtonClick called, chart type: \" + chart_type);\n      this.chartType = chart_type;\n      if (chart_type === 'scatter') {\n        if (this.scatter_chart_ref === undefined) {\n          this.scatter_chart_ref = this.$refs.station_scatter_graph;\n          this.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(this.activeBtn, \"days\").valueOf(), moment.utc().valueOf());\n        }\n      } else {\n        if (this.$refs.station_pie_chart == undefined) {\n          this.pie_chart_ref = this.$refs.station_pie_chart;\n        }\n      }\n    },\n    pastData(days_back) {\n      console.debug(\"Retrieving: \" + days_back + \" days of data.\")\n      let vm = this;\n      let location_site_name = this.$store.state.site_name;\n      let start_date = moment().subtract(days_back, 'days').format(\"YYYY-MM-DD 00:00:00\");\n      let end_date = moment.utc().format(\"YYYY-MM-DD HH:mm:ss\");\n      //this.graph_data = [];\n      this.pie_chart_data = [];\n      this.scatter_plot_data = [];\n      DataAPI.GetSiteData(location_site_name, this.site_id, start_date, end_date)\n          .then(response => {\n            vm.feature_data = response.data;\n            let site_type = vm.feature_data.properties.site_type;\n            if (site_type in vm.feature_data.properties) {\n              vm.feature_data.properties[site_type].advisory.results.forEach(function (rec) {\n                let date_val = moment(rec.date);\n                vm.scatter_plot_data.push([date_val.valueOf(), rec.value]);\n              });\n              if (vm.scatter_chart_ref !== undefined) {\n                vm.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(days_back, \"days\").valueOf(), moment.utc().valueOf());\n              }\n              vm.calcStats(vm, vm.scatter_plot_data);\n            }\n          })\n          .catch(error => console.error(error));\n\n    },\n    calcStats(vm, data_array) {\n      console.debug(\"calcStats called.\");\n      vm.records_above_max_threshold = 0;\n      vm.total_records = 0;\n      if (data_array.length) {\n        data_array.forEach(function (rec) {\n          if (rec[1] >= vm.$store.state.advisory_limits.hi.minimum) {\n            vm.records_above_max_threshold += 1;\n          }\n        });\n        vm.total_records = data_array.length;\n        vm.pie_chart_data = [\n          {\n            name: 'Sample Count',\n            y: vm.total_records,\n            color: 'blue'\n          },\n          {\n            name: 'Samples Above Limit',\n            y: vm.records_above_max_threshold,\n            color: 'red'\n          }\n        ]\n        vm.percentage_exceeds = parseInt((vm.records_above_max_threshold / vm.total_records) * 100.0);\n        console.debug(\"Total Samples: \" + vm.total_records + \"Bad Samples: \" + vm.records_above_max_threshold);\n      }\n    },\n    onClose() {\n      console.debug(\"onClose modal_graph_closed event emitted.\");\n      this.$emit(\"modal_graph_closed\");\n    },\n    bacteriaPopup() {\n      console.debug(\"bacteriaPopup clicked.\");\n      /*temporay until we get the states into the database*/\n      /*\n      let sc_sites = ['charleston', 'myrtlebeach', 'follybeach', 'surfside'];\n      let nc_sites = ['killdevilhills'];\n      let fl_sites = ['sarasota'];\n      this.activeBacteriaModalName = '';\n      this.activeBacteriaModal = undefined;\n      if (sc_sites.includes(this.$store.state.site_name)) {\n        this.activeBacteriaModalName = \"sc_bacteria_data_modal\";\n        this.activeBacteriaModal = \"SCDHECBacteriaPopup\";\n      }\n      else if (nc_sites.includes(this.$store.state.site_name)) {\n        this.activeBacteriaModalName = \"nc_bacteria_data_modal\";\n        this.activeBacteriaModal = \"NCBacteriaPopup\";\n      }\n      else if (fl_sites.includes(this.$store.state.site_name)) {\n        this.activeBacteriaModalName = \"fl_bacteria_data_modal\";\n        this.activeBacteriaModal = \"FLBacteriaPopup\";\n      }\n      */\n      //this.$bvModal.show(this.activeBacteriaModalName);\n      this.showBacteriaModal = true;\n    },\n    clickNowCastInfo() {\n      this.showNowCastModal = true;\n      console.debug(\"clickNowCastInfo clicked.\");\n    },\n    alert_text_color: function(level) {\n      let text_color = '';\n\n      if(level == \"LOW\")\n      {\n        text_color = 'no_alert';\n      }\n      else if(level == \"HIGH\")\n      {\n        text_color = 'warning';\n      }\n      else {\n        text_color = 'no_data'\n      }\n      return text_color;\n    }\n  },\n\n  watch: {},\n  computed: {\n    site_post_code: function() {\n      if (this.feature !== undefined) {\n        return (this.feature.properties.post_code)\n      }\n      return ('');\n    },\n    site_longitude: function () {\n      if (this.feature !== undefined) {\n        return (this.feature.geometry.coordinates[0])\n      }\n      return (-1.0);\n    },\n    site_latitude: function () {\n      if (this.feature !== undefined) {\n        return (this.feature.geometry.coordinates[1])\n      }\n      return (-1.0);\n    },\n    site_feature: function () {\n      if (this.feature !== undefined) {\n        return ([this.feature]);\n      }\n      return (undefined);\n    },\n    site_description: function () {\n      if (this.feature !== undefined) {\n        return (this.feature.properties.description);\n      }\n      return (\"\");\n    },\n    chartType: {\n      get: function () {\n        return this.chartTypeBtn;\n      },\n      set: function (chart_type) {\n        this.chartTypeBtn = chart_type;\n      }\n    },\n    show_bacteria_results: function() {\n      return(false);\n    },\n    hasAdvisoryData: function () {\n      console.debug(\"hasAdvisoryData started.\");\n      if (this.feature !== undefined) {\n        let site_type = this.feature.properties.site_type;\n        if (site_type in this.feature.properties) {\n          if ('advisory' in this.feature.properties[site_type]) {\n            console.debug(\"hasAdvisoryData is true.\");\n            return (true);\n          }\n        }\n      }\n      console.debug(\"hasAdvisoryData is false.\");\n      return (false);\n    },\n    advisoryDate: function () {\n      console.debug(\"advisoryDate started.\");\n      let date_str = \"\";\n      try {\n        if (this.feature !== undefined) {\n          if (this.hasAdvisoryData) {\n            let site_type = this.feature.properties.site_type;\n            let date_obj = moment(this.feature.properties[site_type].advisory.date);\n            if(date_obj.isValid()) {\n              date_str = date_obj.format(\"MMMM Do YYYY\");\n            }\n          }\n        }\n      }\n      catch(error)\n      {\n        console.error(error);\n      }\n      console.debug(\"advisoryDate returning: \" + date_str);\n      return(date_str);\n    },\n    advisoryValue: function () {\n      console.debug(\"advisoryValue started.\");\n      let advisory_level = '';\n      let value = undefined;\n      if (this.feature !== undefined) {\n        if (this.hasAdvisoryData) {\n          let site_type = this.feature.properties.site_type;\n          try {\n             value = parseInt(this.feature.properties[site_type].advisory.value, 10);\n          }\n          catch(error) {\n            console.error(error);\n          }\n          advisory_level = \"NO DATA\";\n          if(value !== undefined && !isNaN(value)) {\n            if (value > this.$store.state.advisory_limits.hi.minimum) {\n              advisory_level = \"HIGH\"\n            } else {\n              advisory_level = \"LOW\"\n            }\n          }\n        }\n      }\n      console.debug(\"advisoryValue returning: \" + value);\n      return (advisory_level);\n    },\n    hasNowcastData: function () {\n      console.debug(\"hasNowcastData started.\");\n      if (this.feature !== undefined) {\n        let site_type = this.feature.properties.site_type;\n        if (site_type in this.feature.properties) {\n          if ('nowcasts' in this.feature.properties[site_type]) {\n            console.debug(\"hasNowcastData is true.\");\n            return (true);\n          }\n        }\n      }\n      console.debug(\"hasNowcastData is false.\");\n      return (false);\n    },\n    nowcastsDate: function () {\n      console.debug(\"nowcastsDate started.\");\n      let date_str = \"\";\n      try {\n        if (this.feature !== undefined) {\n          if (this.hasAdvisoryData) {\n            let site_type = this.feature.properties.site_type;\n            let date_obj = moment(this.feature.properties[site_type].nowcasts.date);\n            if(date_obj.isValid()) {\n              date_str = date_obj.format(\"MMMM Do YYYY\");\n            }\n          }\n        }\n      }\n      catch(error) {\n        console.error(error);\n      }\n      console.debug(\"nowcastsDate returning: \" + date_str);\n      return (date_str);\n    },\n    nowcastsValue: function () {\n      console.debug(\"nowcastsValue started.\");\n      if (this.feature !== undefined) {\n        if (this.hasAdvisoryData) {\n          let site_type = this.feature.properties.site_type;\n          let level = this.feature.properties[site_type].nowcasts.level;\n          console.debug(\"nowcastsValue returning: \" + level);\n          return (level);\n        }\n      }\n      console.debug(\"nowcastsValue returning: \");\n      return (\"\");\n    },\n    haveWQData: function () {\n      if (this.scatter_plot_data.length) {\n        return (true);\n      }\n      return (false);\n    }\n  }\n}\n</script>\n<style scoped>\n.min-width-map-column {\n  min-width: 250px;\n}\n.data-graph {\n  background-color: rgba(0, 61, 126, .85);\n  color: #003D7ED8\n  /*color: #FFFFFF*/\n}\n\n.page-background {\n  background-color: #FFFFFF;\n  /*background-color: #003D7ED8;*/\n}\n</style>\n"],"sourceRoot":"src/components"}]}