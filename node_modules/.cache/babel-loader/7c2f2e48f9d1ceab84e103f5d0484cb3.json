{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_graph.vue","mtime":1682360357860},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682361371663},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682361372188}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["station_graph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"card\">\n            <div class=\"card-body data-graph\">\n                <button type=\"button\" class=\"app-button-style btn btn-primary avenir-font background_color\" @click=\"$router.go(-1)\">&laquo; Back</button>\n                <div class=\"mt-4 card-title font-avenir\">\n                    <h2>Site: {{site_name}}</h2>\n                </div>\n                <div class=\"card-subtitle avenir-font-light\">\n                   <h3>ID: {{site_id}}</h3>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div ref=\"days_buttons\" class=\"btn-group\">\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 30}\" @click=\"daysButtonClick($event, 30)\">30 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 60}\" @click=\"daysButtonClick($event,60)\">60 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 90}\" @click=\"daysButtonClick($event,90)\">90 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 180}\" @click=\"daysButtonClick($event,180)\">180 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 365}\" @click=\"daysButtonClick($event,365)\">365 days</button>\n                        </div>\n                    </div>\n                </div>\n              <div class=\"row mt-4\">\n                <div class=\"col-12\">\n                  <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: chartTypeBtn === 'pie'}\" @click=\"chartTypesButtonClick($event, 'pie')\">Pie Chart</button>\n                  <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: chartTypeBtn === 'scatter'}\" @click=\"chartTypesButtonClick($event,'scatter')\">Scatter Plot</button>\n                </div>\n              </div>\n                <!---\n                <div class=\"row mt-4\">\n                  <div class=\"col-12\">\n                    <table>\n                      <tr>\n                        <td >Number of Samples</td>\n                        <td class=\"ml-3\">{{total_records}}</td>\n                      </tr>\n                      <tr>\n                        <td>Exceeds Threshold</td>\n                        <td class=\"ml-3\">{{records_above_max_threshold}}</td>\n                      </tr>\n                    </table>\n                    </div>\n                </div>\n                -->\n                <div v-show=\"chartType === 'scatter'\" class=\"row mt-4\">\n                    <div ref=\"scatter_plot_column\" class=\"col-12 full-graph\">\n                        <WQPlot\n                                ref=\"station_scatter_graph\"\n                                :chart_options=\"scatter_chart_options\"\n                                id='station_scatter_graph'\n                                :station_data=\"scatter_plot_data\">\n                        </WQPlot>\n                    </div>\n                </div>\n                <div v-show=\"chartType === 'pie'\" class=\"row mt-4\">\n                    <div ref=\"pie_chart_column\" class=\"col-6 full-graph\">\n                        <WQPlot ref=\"station_pie_chart\"\n                                :chart_options=\"pie_chart_options\"\n                                id='station_pie_chart'\n                                :station_data=\"pie_chart_data\">\n                        </WQPlot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import moment from 'moment';\n    import DataAPI from \"../utilities/rest_api\";\n\n    import WQPlot from \"@/components/scatter_plot\";\n    import Highcharts from 'highcharts';\n\n    export default {\n        name: 'StationGraph',\n        props: {\n            'site_id': {type: String, default: 'Site Id'},\n        },\n        components: {\n            WQPlot\n        },\n        data()\n        {\n            return {\n                activeBtn: 60,\n                chartTypeBtn: 'pie',\n                site_description: '',\n                //graph_data: [],\n                chart_data: [],\n                scatter_plot_data: [],\n                pie_chart_data: [],\n                scatter_chart_ref: undefined,\n                pie_chart_ref: undefined,\n                records_above_max_threshold: 0,\n                percentage_exceeds: 0,\n                total_records: 0,\n                scatter_chart_options: {\n                    chart: {\n                        //backgroundColor: 'rgba(0,0,0,0)',\n                        defaultSeriesType: 'scatter',\n                        marginRight: 0,\n                        marginLeft: 65,\n                        marginTop: 20\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: null\n                    },\n                    colors: ['#333333'],\n                    xAxis: {\n                        endOnTick: true,\n                        showLastLabel: false,\n                        title: {\n                            text: 'Date',\n                            offset: 30\n                        },\n                        type: 'datetime',\n                        dateTimeLabelFormats: {\n                            day: '%e %b \\'%y',\n                            week: '%e %b \\'%y',\n                            month: '%e %b \\'%y',\n                            year: '%e %b \\'%y',\n                        },\n                        labels: {\n                            rotation: 0,\n                            y: 20\n                        },\n                        tickWidth: 0\n                    },\n                    yAxis: {\n                        type: 'logarithmic',\n                        showFirstLabel: false,\n                        tickPositioner: function (min, max) {\n                            min;\n                            max;\n                            var ticks = [1, 10, 100, 1000, 10000],\n                                i = ticks.length;\n\n                            while (i--)\n                                ticks[i] = this.val2lin(ticks[i]);\n\n                            return ticks;\n                        },\n                        labels: {\n                            formatter: function () {\n                                return this.value < 10 ? 1 : this.value;\n                            },\n                            style: {\n                                \"color\": \"#FFFFFF\"\n                            }\n                        },\n                        gridLineWidth: 0,\n                        lineWidth: 1,\n                        title: {\n                            text: 'Bacteria per 100 mL',\n                            margin: 0\n                        },\n                        plotBands: [\n                            {\n                                color: '#96ca2d',\n                                from: this.$store.state.advisory_limits.low.minimum,\n                                to: this.$store.state.advisory_limits.hi.minimum\n                            },\n                            {\n                                color: '#DB1A0F',\n                                from: this.$store.state.advisory_limits.hi.minimum,\n                                to: 10000\n                            }\n                        ]\n                    },\n                    tooltip: {\n                        formatter: function () {\n                            return '<strong>Date:</strong> ' + Highcharts.dateFormat('%e %B %Y', this.x) + '<br /><strong>Bacteria level:</strong> ' + Math.round(this.y);\n                        }\n                    },\n                    legend: {\n                        enabled: false\n                    },\n                    series: [{\n                        name: 'Station',\n                        data: []\n                    }]\n\n                },\n                pie_chart_options:\n                    {\n                      chart: {\n                        plotBackgroundColor: null,\n                        plotBorderWidth: null,\n                        plotShadow: false,\n                        type: 'pie'\n                      },\n                      title: {\n                        text: null,\n                      },\n                      /*tooltip: {\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n                      },*/\n                      /*accessibility: {\n                        point: {\n                          valueSuffix: '%'\n                        }\n                      },*/\n                      plotOptions: {\n                        pie: {\n                          allowPointSelect: true,\n                          cursor: 'pointer',\n                          dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {point.y}'\n                          }\n                        }\n                      },\n                      series: [{\n                        name: 'Sample Counts',\n                        colorByPoint: true,\n                        data: []\n                      }]\n                    }\n            }\n        },\n        mounted() {\n            console.debug(\"StationGraph mounted.\");\n\n            //We aren't passing the props in the vue route path, so we check the params to then set the properties.\n            if('params' in this.$route) {\n                if('site_id' in this.$route.params)\n                {\n                    this.site_id = this.$route.params.site_id;\n                }\n                if('site_name' in this.$route.params)\n                {\n                    this.site_name = this.$route.params.site_name;\n                }\n                /*\n                if('graph_data' in this.$route.params)\n                {\n                    this.graph_data = this.$route.params.graph_data;\n                }\n                */\n            }\n\n            //We pull the last 60 days worth of data to show.\n            this.scatter_chart_ref = this.$refs.station_scatter_graph;\n            this.pie_chart_ref = this.$refs.station_pie_chart;\n            this.pastData(60);\n        },\n        methods: {\n            daysButtonClick(button_clicked, days) {\n                this.activeBtn = days;  //We use this to toggle the active class on the button.≠≠\n                this.pastData(days);\n            },\n            chartTypesButtonClick(button_clicked, chart_type) {\n                console.debug(\"chartTypesButtonClick called, chart type: \" + chart_type);\n                this.chartType = chart_type;\n                if(chart_type === 'scatter') {\n                  if(this.scatter_chart_ref === undefined) {\n                    this.scatter_chart_ref = this.$refs.station_scatter_graph;\n                    this.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(this.activeBtn, \"days\").valueOf(), moment.utc().valueOf());\n                  }\n                }\n                else\n                {\n                  if(this.$refs.station_pie_chart == undefined) {\n                    this.pie_chart_ref = this.$refs.station_pie_chart;\n                  }\n                }\n            },\n            pastData(days_back) {\n                console.debug(\"Retrieving: \" + days_back + \" days of data.\")\n                let vm=this;\n                let location_site_name = this.$store.state.site_name;\n                let start_date = moment().subtract(days_back, 'days').format(\"YYYY-MM-DD 00:00:00\");\n                let end_date = moment.utc().format(\"YYYY-MM-DD HH:mm:ss\");\n                //this.graph_data = [];\n                this.pie_chart_data = [];\n                this.scatter_plot_data = [];\n                DataAPI.GetSiteData(location_site_name, this.site_id, start_date, end_date)\n                    .then(response => {\n                        vm.feature_data = response.data;\n                        let site_type = vm.feature_data.properties.site_type;\n                        if (site_type in vm.feature_data.properties) {\n                            vm.feature_data.properties[site_type].advisory.results.forEach(function (rec) {\n                                let date_val = moment(rec.date);\n                                vm.scatter_plot_data.push([date_val.valueOf(), rec.value]);\n                            });\n                            if(vm.scatter_chart_ref !== undefined) {\n                              vm.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(days_back, \"days\").valueOf(), moment.utc().valueOf());\n                            }\n                            vm.calcStats(vm, vm.scatter_plot_data);\n                        }\n                    })\n                    .catch(error => console.error(error));\n\n            },\n            calcStats(vm, data_array) {\n              console.debug(\"calcStats called.\");\n              vm.records_above_max_threshold = 0;\n              vm.total_records = 0;\n              if(data_array.length) {\n                data_array.forEach(function (rec) {\n                  if (rec[1] >= vm.$store.state.advisory_limits.hi.minimum) {\n                    vm.records_above_max_threshold += 1;\n                  }\n                });\n                vm.total_records = data_array.length;\n                vm.pie_chart_data = [\n                  {\n                    name: 'Sample Count',\n                    y: vm.total_records,\n                    color: 'grey'\n                  },\n                  {\n                    name: 'Samples Above Limit',\n                    y: vm.records_above_max_threshold,\n                    color: 'red'\n                  }\n                ]\n                vm.percentage_exceeds = parseInt((vm.records_above_max_threshold / vm.total_records) * 100.0);\n                //let median_val = 0;\n                //let vals = data_array.map(function (x) {\n                //  return x[1]\n                //})\n                //median_val = mean(vals);\n                console.debug(\"Total Samples: \" + vm.total_records + \"Bad Samples: \" + vm.records_above_max_threshold);\n              }\n            },\n            onClose() {\n                console.debug(\"onClose modal_graph_closed event emitted.\");\n                this.$emit(\"modal_graph_closed\");\n            }\n        },\n        computed: {\n          chartType: {\n            get: function() {\n              return this.chartTypeBtn;\n            },\n            set: function(chart_type) {\n              this.chartTypeBtn = chart_type;\n            }\n          }\n          /*\n          graph_data: {\n            get: function() {\n              console.debug(\"graph_data computed called.\")\n              return(this.chart_data);\n            },\n            set: function(scatter_plot_data, pie_chart_data) {\n              if(this.chartTypeBtn == 'scatter') {\n                this.chart_data = scatter_plot_data;\n              }\n              else {\n                this.chart_data = pie_chart_data;\n              }\n\n            }\n          },\n          chart_options: function() {\n            console.debug(\"chart_options computed called.\")\n            if(this.chartTypeBtn == 'scatter') {\n              return this.scatter_chart_options;\n            }\n            else {\n              return this.pie_chart_options;\n            }\n          }\n          */\n        }\n\n    }\n</script>\n<style scoped>\n    .full-graph {\n        width: 100%;\n        height: 100%;\n    }\n    .data-graph {\n        background-color: rgba(0, 61, 126, .85);\n        color: #FFFFFF\n    }\n\n</style>\n"],"sourceRoot":"src/components"}]}