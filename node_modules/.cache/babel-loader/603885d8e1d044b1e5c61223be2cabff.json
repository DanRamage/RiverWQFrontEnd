{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/rest_api.js","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/rest_api.js","mtime":1682360357855},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682361371663},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/eslint-loader/index.js","mtime":1682361370726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsgLy9sZXQgQkFTRV9BUElfVVJMID0gJ2h0dHA6Ly9ob3dzdGhlYmVhY2gub3JnL2FwaS92MS8nOwovL2xldCBCQVNFX0FQSV9VUkwgPSAnaHR0cDovLzEyNy4wLjAuMTo1MDAwL2FwaS92MS8nOwovL2xldCBCQVNFX0FQSV9VUkwgPSAnaHR0cHM6Ly9hcGkuaG93c3RoZWJlYWNoLm9yZy9hcGkvdjEvJzsKCnZhciBCQVNFX0FQSV9VUkwgPSAnaHR0cHM6Ly9kZXZhcGkuaG93c3RoZWJlYWNoLm9yZy9hcGkvdjEvJzsKdmFyIENBTUVSQV9VUkwgPSAiaHR0cHM6Ly93d3cuZmxvcmlkYWFwZGF0YS5vcmcvYmVhY2gvcmVzcG9uc2VfYmVhY2gucGhwIjsKZXhwb3J0IGRlZmF1bHQgewogIEdldFNpdGVEYXRhOiBmdW5jdGlvbiBHZXRTaXRlRGF0YShzaXRlX25hbWUsIHNpdGUsIHN0YXJ0ZGF0ZSwgZW5kZGF0ZSkgewogICAgY29uc29sZS5sb2coIkdldFNpdGVEYXRhIHN0YXJ0ZWQgZm9yIHNpdGUgIiArIHNpdGVfbmFtZSArICcgc3RhdGlvbiAnICsgc2l0ZSk7CiAgICB2YXIgYmFzZV91cmwgPSBCQVNFX0FQSV9VUkwgKyBzaXRlX25hbWUgKyAnLycgKyBzaXRlICsgJy9iYWN0ZXJpYSc7CiAgICB2YXIgdXJsID0gbmV3IFVSTChiYXNlX3VybCk7CiAgICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgic3RhcnRkYXRlIiwgc3RhcnRkYXRlKTsKICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCJlbmRkYXRlIiwgZW5kZGF0ZSk7CiAgICBjb25zb2xlLmxvZygiR2V0U2l0ZURhdGEgR0VUIHVybDoiICsgdXJsLmhyZWYpOwogICAgcmV0dXJuIGF4aW9zLmdldCh1cmwuaHJlZiwgewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICB9CiAgICB9KTsKICB9LAogIEdldFNpdGVzUHJvbWlzZTogZnVuY3Rpb24gR2V0U2l0ZXNQcm9taXNlKHNpdGVfbmFtZSwgc3RhdGlvbiwgZ2V0X3dxX2xpbWl0cywgZ2V0X3Byb2plY3RfYXJlYSkgewogICAgY29uc29sZS5sb2coIkdldFNpdGVzIHN0YXJ0ZWQgZm9yIHNpdGUgIiArIHNpdGVfbmFtZSk7CiAgICB2YXIgYmFzZV91cmwgPSBCQVNFX0FQSV9VUkwgKyBzaXRlX25hbWUgKyAiL3NpdGVzIjsKICAgIHZhciB1cmwgPSBuZXcgVVJMKGJhc2VfdXJsKTsKCiAgICBpZiAoc3RhdGlvbi5sZW5ndGgpIHsKICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoInNpdGUiLCBzdGF0aW9uKTsKICAgIH0KCiAgICBpZiAoZ2V0X3dxX2xpbWl0cykgewogICAgICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgid3FfbGltaXRzIiwgZ2V0X3dxX2xpbWl0cyk7CiAgICB9CgogICAgaWYgKGdldF9wcm9qZWN0X2FyZWEpIHsKICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoInByb2plY3RfYXJlYSIsIGdldF9wcm9qZWN0X2FyZWEpOwogICAgfQoKICAgIGNvbnNvbGUubG9nKCJHZXRTaXRlcyBzdGFydGVkIEdFVCB1cmw6ICIgKyB1cmwuaHJlZik7CiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybC5ocmVmLCB7CiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgIH0KICAgIH0pOyAvLy50aGVuKHJlcyA9PiByZXMuZGF0YSkKICAgIC8vLmNhdGNoKGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTsKICB9LAogIEdldENhbWVyYURhdGE6IGZ1bmN0aW9uIEdldENhbWVyYURhdGEoc2l0ZV9uYW1lLCBwYXJhbWV0ZXIsIHN0YXJ0ZGF0ZSwgZW5kZGF0ZSkgewogICAgY29uc29sZS5sb2coIkdldENhbWVyYURhdGEgc3RhcnRlZCBmb3IgY2FtZXJhOiAiICsgc2l0ZV9uYW1lICsgIlN0YXJ0OiAiICsgc3RhcnRkYXRlICsgIiBUbzogIiArIGVuZGRhdGUpOyAvL3N0YXRpb249Zm9sbHlwaWVyc291dGhjYW0mc3RhcnRfZGF0ZT0yMDIwLTUtMjQmZW5kX2RhdGU9MjAyMC02LTI0JnBhcmFtPXBlcnNvbiZhY3Rpb249Z2V0CgogICAgdmFyIHVybCA9IENBTUVSQV9VUkwgKyAiP3N0YXRpb249IiArIHNpdGVfbmFtZSArICImc3RhcnRfZGF0ZT0iICsgc3RhcnRkYXRlICsgIiZlbmRfZGF0ZT0iICsgZW5kZGF0ZSArICcmcGFyYW09JyArIHBhcmFtZXRlciArICcmYWN0aW9uPWdldCc7CiAgICBjb25zb2xlLmxvZygiR2V0Q2FtZXJhRGF0YSBHRVQgdXJsOiAiICsgdXJsKTsKICAgIHJldHVybiBheGlvcy5nZXQodXJsLCB7CiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgIH0KICAgIH0pOwogIH0sCiAgR2V0V2F0ZXJRdWFsaXR5UHJvZ3JhbUluZm86IGZ1bmN0aW9uIEdldFdhdGVyUXVhbGl0eVByb2dyYW1JbmZvKHNpdGVfbmFtZSwgcHJvZ3JhbV90eXBlKSB7CiAgICBjb25zb2xlLmRlYnVnKCJHZXRXYXRlclF1YWxpdHlQcm9ncmFtSW5mbyBzdGFydGVkIGZvciBzaXRlOiAiICsgc2l0ZV9uYW1lICsgIi4iKTsKICAgIHZhciBiYXNlX3VybCA9IEJBU0VfQVBJX1VSTCArIHNpdGVfbmFtZSArICcvY29sbGVjdGlvbnByb2dyYW1pbmZvJzsKICAgIHZhciB1cmwgPSBuZXcgVVJMKGJhc2VfdXJsKTsKCiAgICBpZiAocHJvZ3JhbV90eXBlICE9PSB1bmRlZmluZWQpIHsKICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoInByb2dyYW1fdHlwZSIsIHByb2dyYW1fdHlwZSk7IC8vdXJsID0gdXJsICsgJz9wcm9ncmFtX3R5cGU9JyArIHByb2dyYW1fdHlwZQogICAgfQoKICAgIGNvbnNvbGUuZGVidWcoIkdldFdhdGVyUXVhbGl0eVByb2dyYW1JbmZvIEdFVCB1cmw6ICIgKyB1cmwuaHJlZik7CiAgICB2YXIgcHJvZ3JhbV9pbmZvX3Byb21pc2UgPSBheGlvcy5nZXQodXJsLmhyZWYsIHsKICAgICAgaGVhZGVyczogewogICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocHJvZ3JhbV9pbmZvKSB7CiAgICAgIHZhciByZXRfdmFsID0gW107CgogICAgICBpZiAoJ2RhdGEnIGluIHByb2dyYW1faW5mbykgewogICAgICAgIGlmICgncHJvcGVydGllcycgaW4gcHJvZ3JhbV9pbmZvLmRhdGEpIHsKICAgICAgICAgIGlmIChwcm9ncmFtX3R5cGUgaW4gcHJvZ3JhbV9pbmZvLmRhdGEucHJvcGVydGllcy5wcm9ncmFtKSB7CiAgICAgICAgICAgIHJldF92YWwgPSBwcm9ncmFtX2luZm8uZGF0YS5wcm9wZXJ0aWVzLnByb2dyYW1bcHJvZ3JhbV90eXBlXTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0X3ZhbCA9IFtdOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHJldF92YWw7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIHJldHVybiBbXTsKICAgIH0pOwogICAgcmV0dXJuIHByb2dyYW1faW5mb19wcm9taXNlOwogIH0sCiAgZXJyb3JfaGFuZGxlcjogZnVuY3Rpb24gZXJyb3JfaGFuZGxlcihjYWxsZXJfbmFtZSwgZXJyb3IpIHsKICAgIHZhciBzdGF0dXNfY29kZSA9IDQwNDsKCiAgICBpZiAoJ3Jlc3BvbnNlJyBpbiBlcnJvciAmJiBlcnJvci5yZXNwb25zZSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgIHN0YXR1c19jb2RlID0gZXJyb3IucmVzcG9uc2Uuc3RhdHVzOwogICAgICBjb25zb2xlLmVycm9yKCJGdW5jdGlvbjogIiArIGNhbGxlcl9uYW1lICsgIiBTdGF0dXMgY29kZTogIiArIHN0YXR1c19jb2RlICsgIi4gRXJyb3IgTXNnOiAiICsgZXJyb3IpOwogICAgfSBlbHNlIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/rest_api.js"],"names":["axios","BASE_API_URL","CAMERA_URL","GetSiteData","site_name","site","startdate","enddate","console","log","base_url","url","URL","searchParams","append","href","get","headers","GetSitesPromise","station","get_wq_limits","get_project_area","length","GetCameraData","parameter","GetWaterQualityProgramInfo","program_type","debug","undefined","program_info_promise","then","program_info","ret_val","data","properties","program","catch","error","error_handler","caller_name","status_code","response","status"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n//let BASE_API_URL = 'http://howsthebeach.org/api/v1/';\n//let BASE_API_URL = 'http://127.0.0.1:5000/api/v1/';\n//let BASE_API_URL = 'https://api.howsthebeach.org/api/v1/';\nlet BASE_API_URL = 'https://devapi.howsthebeach.org/api/v1/';\nlet CAMERA_URL = \"https://www.floridaapdata.org/beach/response_beach.php\";\n\nexport default {\n    GetSiteData(site_name, site, startdate, enddate) {\n        console.log(\"GetSiteData started for site \" + site_name + ' station '  +  site);\n        let base_url = BASE_API_URL + site_name + '/' + site + '/bacteria'\n        let url = new URL(base_url);\n        url.searchParams.append(\"startdate\", startdate)\n        url.searchParams.append(\"enddate\", enddate)\n        console.log(\"GetSiteData GET url:\" + url.href);\n        return(axios.get(url.href, {headers: {'Content-Type': 'application/json'}}));\n\n    },\n    GetSitesPromise(site_name, station, get_wq_limits, get_project_area) {\n        console.log(\"GetSites started for site \" + site_name);\n        let base_url = BASE_API_URL + site_name + \"/sites\";\n        let url = new URL(base_url);\n        if(station.length)\n        {\n            url.searchParams.append(\"site\", station);\n        }\n        if(get_wq_limits)\n        {\n            url.searchParams.append(\"wq_limits\", get_wq_limits);\n        }\n        if(get_project_area)\n        {\n            url.searchParams.append(\"project_area\", get_project_area);\n        }\n        console.log(\"GetSites started GET url: \" + url.href);\n        return axios.get(url.href, {headers: {'Content-Type': 'application/json'}});\n            //.then(res => res.data)\n            //.catch(error => console.error(error));\n    },\n    GetCameraData(site_name, parameter, startdate, enddate) {\n        console.log(\"GetCameraData started for camera: \" + site_name + \"Start: \" + startdate + \" To: \" + enddate);\n        //station=follypiersouthcam&start_date=2020-5-24&end_date=2020-6-24&param=person&action=get\n        let url = CAMERA_URL +\n            \"?station=\" + site_name +\n            \"&start_date=\" + startdate +\n            \"&end_date=\" + enddate +\n            '&param=' + parameter +\n            '&action=get';\n        console.log(\"GetCameraData GET url: \" + url);\n        return(axios.get(url, {headers: {'Content-Type': 'application/json'}}));\n\n    },\n    GetWaterQualityProgramInfo(site_name, program_type) {\n        console.debug(\"GetWaterQualityProgramInfo started for site: \" + site_name + \".\");\n        let base_url = BASE_API_URL + site_name + '/collectionprograminfo';\n        let url = new URL(base_url)\n        if(program_type !== undefined)\n        {\n            url.searchParams.append(\"program_type\", program_type)\n            //url = url + '?program_type=' + program_type\n        }\n        console.debug(\"GetWaterQualityProgramInfo GET url: \" + url.href);\n        let program_info_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(program_info=> {\n                let ret_val = []\n                if('data' in program_info) {\n                    if ('properties' in program_info.data) {\n                        if (program_type in program_info.data.properties.program) {\n                            ret_val = program_info.data.properties.program[program_type];\n                        }\n                    } else {\n                        ret_val = [];\n                    }\n                }\n                return(ret_val);\n            })\n            .catch(error=> {\n                console.error(error);\n                return [];\n            });\n        return program_info_promise;\n\n\n    },\n    error_handler: function(caller_name, error) {\n        let status_code = 404;\n        if('response' in error && error.response !== undefined) {\n            status_code = error.response.status;\n            console.error(\"Function: \" + caller_name + \" Status code: \" + status_code +\". Error Msg: \" + error);\n        }\n        else{\n            console.error(error);\n        }\n    }\n\n}\n"]}]}