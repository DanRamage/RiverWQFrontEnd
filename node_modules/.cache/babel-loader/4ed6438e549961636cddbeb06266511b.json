{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/eslint-loader/index.js??ref--14-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/nws_rest_api.js","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/nws_rest_api.js","mtime":1682360357856},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/babel.config.js","mtime":1682360357849},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682365544304},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/eslint-loader/index.js","mtime":1682361370726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","NWS_API_BASE_URL","EPA_API_BASE_URL","NOAA_STATION_QUERY_BASE_URL","NOAA_TIDES_BASE_URL","GetNWSActiveAlerts","params","url","URL","searchParams","append","latitude","longitude","event","console","log","debug","href","alerts","get","headers","then","data","features","GetNWSZones","zones_promise","zones","catch","error","error_message","status_code","response","undefined","status","message","GetNWSStationsGridURL","stations_promise","stations_at_grid","GetNWSPointInformation","point_info_promise","whats_here","properties","GetObservingStationsforGrid","obs_stations_promise","station_lists","GetNWSStationLatestObservations","station_code","station_promise","station_data","GetNWSForecast","url_param_provided","forecast_promise","forecast_properties","forecast_url","forecast","forecast_data","EPAGetUVIndex","time_frame","post_code","city","state_code","uv_index_promise","uv_index","NOAAFindTideStation","radius","find_station_promise","station_list","NOAATideQuery","date","station","product","datum","time_zone","interval","units","tide_promise","header","tide_data"],"sources":["/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/utilities/nws_rest_api.js"],"sourcesContent":["import axios from \"axios\";\n\nlet NWS_API_BASE_URL = \"https://api.weather.gov\";\n//let EPA_API_BASE_URL = \"https://enviro.epa.gov/enviro/efservice/\"\n//let EPA_API_BASE_URL = 'http://127.0.0.1:5000/api/v1/';\n//let EPA_API_BASE_URL = 'https://devapi.howsthebeach.org/api/v1/';\nlet EPA_API_BASE_URL = 'https://data.epa.gov/efservice/';\nlet NOAA_STATION_QUERY_BASE_URL = 'https://api.tidesandcurrents.noaa.gov/mdapi/prod/webapi/tidepredstations.json';\nlet NOAA_TIDES_BASE_URL = \"https://api.tidesandcurrents.noaa.gov/api/prod/datagetter\";\nexport default {\n    /*\n    GetNWSActiveAlerts\n    This retrieves any active alerts for the latitude and longitude passed in the params. If a specific event is passed in\n    the params, this will return only that specific alert if it is active.\n    Parameters:\n        params:\n            -latitude Latitude for the request\n            -longitude Longitude for the request\n            -event NWS defined event, these are found here: https://api.weather.gov/alerts/types\n    Return:\n        Returns a promise, if it succeeds we return the features portion of the response.\n    * */\n    GetNWSActiveAlerts(params)\n    {\n        //let url_params = [];\n        let url = new URL(NWS_API_BASE_URL + '/alerts/active');\n        if('latitude' in params && 'longitude' in params)\n        {\n            url.searchParams.append('point', params.latitude + \",\" + params.longitude)\n        }\n        if('event' in params)\n        {\n            url.searchParams.append('event', params.event)\n        }\n        console.log(\"GetNWSActiveAlerts started.\");\n\n        console.debug(\"GetNWSActiveAlerts GET url: \" + url.href);\n        let alerts = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(alerts=> {\n                if('data' in alerts) {\n                    return alerts.data.features;\n                }\n            })\n        return(alerts);\n\n    },\n    GetNWSZones(params)\n    {\n        console.log(\"GetNWSAcGetNWSZonestiveAlerts started.\");\n        let url = new URL(NWS_API_BASE_URL + '/zones');\n        if('latitude' in params && 'longitude' in params)\n        {\n            url.searchParams.append('point', params.latitude + \",\" + params.longitude)\n        }\n\n        console.debug(\"GetNWSZones GET url: \" + url.href);\n        let zones_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(function(zones) {\n                if('data' in zones) {\n                    return zones.data.features;\n                }\n                else {\n                    return [];\n                }\n                })\n            .catch(error=> {\n                let error_message = '';\n                let status_code = 404;\n                if('response' in error && error.response !== undefined) {\n                    status_code = error.response.status;\n                    if ('error' in error.response.data) {\n                        if ('message' in error.response.data.error) {\n                            error_message = error.response.data.error.message;\n                        }\n                    } else {\n                        error_message = error.response.data;\n                    }\n                    console.error(\"Status code: \" + status_code +\". Error Msg: \" + error_message);\n                }\n                else{\n                    console.error(error);\n                }\n            });\n        return zones_promise;\n    },\n    GetNWSStationsGridURL(url) {\n        console.debug(\"GetNWSStations GET url: \" + url);\n        url = new URL(url);\n        //The url\n        let stations_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(function(stations_at_grid) {\n                stations_at_grid\n            })\n        return(stations_promise);\n    },\n    /*\n    GetNWSPointInformation\n    This gives us what is available(forecasts, observing station) for the provided latitude and longitude. We can use the\n    links returned to then query forecasts and observation data.\n    Parameters:\n        -latitude Latitude for the request\n        -longitude Longitude for the request\n    Return:\n        Returns a promise, if it succeeds we return the data/products for the point.\n    * */\n    GetNWSPointInformation(latitude, longitude) {\n        console.log(\"GetNWSForecast started.\");\n        let url = new URL(NWS_API_BASE_URL + '/points/' + latitude + ',' + longitude);\n        console.debug(\"GetNWSForecast GET url: \" + url.href);\n        //This first request will get the information available at the provided point.\n        let point_info_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(function(whats_here) {\n                    if('data' in whats_here && 'properties' in whats_here.data) {\n                        return (whats_here.data.properties);\n                    }\n            })\n            .catch(error=> {\n                    let error_message = '';\n                    let status_code = 404;\n                    if('response' in error && error.response !== undefined) {\n                        status_code = error.response.status;\n                        if ('error' in error.response.data) {\n                            if ('message' in error.response.data.error) {\n                                error_message = error.response.data.error.message;\n                            }\n                        } else {\n                            error_message = error.response.data;\n                        }\n                        console.error(\"Status code: \" + status_code +\". Error Msg: \" + error_message);\n                    }\n                    else{\n                        console.error(error);\n                    }\n                });\n\n        return(point_info_promise);\n    },\n\n    GetObservingStationsforGrid(url) {\n        console.log(\"GetObservingStationsforGrid started.\");\n        url = new URL(url);\n        console.debug(\"GetObservingStationsforGrid GET url: \" + url);\n\n        //This first request will get the information available at the provided point.\n        let obs_stations_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(function (station_lists) {\n                if('data' in station_lists) {\n                    return(station_lists.data);\n                }\n\n            })\n        return(obs_stations_promise);\n    },\n    GetNWSStationLatestObservations(params) {\n        console.log(\"GetNWSStationLatestObservations started.\");\n        let url = undefined;\n        if('url' in params)\n        {\n            url = new URL(params['url']);\n        }\n        else {\n            if('station_code' in params) {\n                url = new URL(NWS_API_BASE_URL + '/stations/' + params.station_code + '/observations/latest');\n            }\n        }\n        if(url !== undefined) {\n            console.debug(\"GetNWSStationLatestObservations GET url: \" + url);\n\n            //This first request will get the information available at the provided point.\n            let station_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n                .then(function (station_data) {\n                    if ('data' in station_data && 'properties' in station_data.data) {\n                        return (station_data.data.properties);\n                    }\n                })\n                .catch(error => {\n                    let error_message = '';\n                    let status_code = 404;\n                    if ('response' in error && error.response !== undefined) {\n                        status_code = error.response.status;\n                        if ('error' in error.response.data) {\n                            if ('message' in error.response.data.error) {\n                                error_message = error.response.data.error.message;\n                            }\n                        } else {\n                            error_message = error.response.data;\n                        }\n                        console.error(\"Status code: \" + status_code + \". Error Msg: \" + error_message);\n                    } else {\n                        console.error(error);\n                    }\n                });\n            return (station_promise);\n        }\n    },\n    /*\n    GetNWSForecast\n    This retrieves the forecast for the given latitude and longitude. This nests requests as the first requests gives us the details\n    link for the forecast. If the latitude and longitude are provided, 2 queries are done. The first is to find the points\n    of data available for the area, then we get the forecast parameter from that and query the forecast. If the url\n    is provided, we just query the forecast.\n    Parameters:\n        -params is a keyed array with either of the following options:\n            -latitude Latitude for the request\n            -longitude Longitude for the request\n            or\n            -url is the url for the forecast.\n    Return:\n        Returns a promise, if it succeeds we return the forecast data.\n    * */\n\n    GetNWSForecast(params) {\n        console.log(\"GetNWSForecast started.\");\n        let url = undefined;\n        let url_param_provided = false;\n        if('latitude' in params && 'longitude' in params)\n        {\n            url = new URL(NWS_API_BASE_URL + '/points/' + params.latitude + ',' + params.longitude);\n        }\n        /*If we provide the url, we don't need to make the first query to get the url query for the grid points.*/\n        else if('url' in params)\n        {\n            url = new URL(params.url);\n            url_param_provided = true;\n        }\n        console.debug(\"GetNWSForecast GET url: \" + url.href);\n        let forecast_promise = undefined;\n        if(!url_param_provided) {\n            //This first request will get the information available at the provided point. The forecast url is in the returned\n            //data. WE use this in a nested request to then get the forecast.\n            forecast_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n                .then(function (forecast_properties) {\n                    if ('data' in forecast_properties && 'properties' in forecast_properties.data) {\n                        let forecast_url = forecast_properties.data.properties.forecast;\n                        axios.get(forecast_url, {headers: {'Content-Type': 'application/json'}}).then(function (forecast_data) {\n                            if ('data' in forecast_data && 'properties' in forecast_data.data) {\n                                return (forecast_data.data);\n                            }\n                        })\n                        //return forecast_promise;\n                    }\n                })\n                .then(forecast => {\n                    if ('data' in forecast) {\n                        return forecast.data;\n                    }\n                })\n                .catch(error => {\n                    let error_message = '';\n                    let status_code = 404;\n                    if ('response' in error && error.response !== undefined) {\n                        status_code = error.response.status;\n                        if ('error' in error.response.data) {\n                            if ('message' in error.response.data.error) {\n                                error_message = error.response.data.error.message;\n                            }\n                        } else {\n                            error_message = error.response.data;\n                        }\n                        console.error(\"Status code: \" + status_code + \". Error Msg: \" + error_message);\n                    } else {\n                        console.error(error);\n                    }\n                });\n        }\n        else {\n            forecast_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}}).then(function (forecast_data) {\n                if ('data' in forecast_data && 'properties' in forecast_data.data) {\n                    return (forecast_data.data);\n                }\n            })\n        }\n        return forecast_promise;\n\n    },\n    /*\n            EPAGetUVIndex\n            Queries the EPA UV Index hourly forecast.\n    */\n    EPAGetUVIndex(params) {\n        console.log(\"EPAGetUVIndex started.\");\n\n        let url = undefined\n        let time_frame = 'hourly';\n        if('type' in params)\n        {\n            if(params['type'] == 'daily') {\n                time_frame = 'daily';\n            }\n        }\n        if('post_code' in params)\n        {\n            if(time_frame == \"hourly\")\n            {\n                url = new URL(EPA_API_BASE_URL + \"getEnvirofactsUVHOURLY/ZIP/\" + params.post_code + \"/json\");\n            }\n            else {\n                url = new URL(EPA_API_BASE_URL + \"getEnvirofactsUVHOURLY/ZIP/\" + params.post_code + \"/json\");\n            }\n            /*\n            url = new URL(EPA_API_BASE_URL + '/epa_uv_index');\n            url.searchParams.append('post_code', params.post_code);\n            url.searchParams.append('time_frame', time_frame);\n            */\n        }\n        else if('city' in params && 'state_code' in params)\n        {\n            /*\n            url = new URL(EPA_API_BASE_URL + '/epa_uv_index');\n            url.searchParams.append('city', params.city);\n            url.searchParams.append('state', params.state_code);\n            url.searchParams.append('time_frame', time_frame);\n            */\n            url = new URL(EPA_API_BASE_URL + 'getEnvirofactsUVHOURLY/CITY/' + params.city + '/STATE/' + params.state_code + '/json');\n        }\n        console.debug(\"EPAGetUVIndex GET url: \" + url.href);\n\n        let uv_index_promise = axios.get(url.href)\n            .then(function(uv_index) {\n                if('data' in uv_index) {\n                    return (uv_index.data);\n                }\n                else {\n                    console.error(\"No data found in EPAGetUVIndex query.\");\n                    return [];\n                }\n            });\n        return uv_index_promise;\n\n\n    },\n\n    /*\n    NOAAFindTideStation\n    Given a latitude and longitude and search radius, this will return the stations nearest that point.\n     */\n    NOAAFindTideStation: function(latitude, longitude, radius)\n    {\n        console.debug(\"NOAAFindTideStation started.\")\n        let url = new URL(NOAA_STATION_QUERY_BASE_URL);\n        url.searchParams.append('lat', latitude);\n        url.searchParams.append('lon', longitude);\n        if(radius != undefined)\n        {\n            url.searchParams.append('radius', radius);\n        }\n        else\n        {\n            url.searchParams.append('radius', '2');\n        }\n        console.debug(\"NOAAFindTideStation url: \" + url.href);\n        let find_station_promise = axios.get(url.href, {headers: {'Content-Type': 'application/json'}})\n            .then(function(station_list){\n                if('data' in station_list) {\n                    return(station_list.data);\n                }\n                else {\n                    console.error(\"NOAAFindTideStation did not return data.\")\n                }\n            })\n        return(find_station_promise);\n    },\n    NOAATideQuery: function(date, station, product, datum, time_zone, interval, units) {\n        //'?date=today&\n        // station=8661070&\n        // product=predictions&\n        // datum=STND&\n        // time_zone=lst_ldt&\n        // interval=hilo&\n        // units=english&\n        // format=json'\n\n        console.debug(\"NOAATideQuery started.\")\n        let url = new URL(NOAA_TIDES_BASE_URL);\n        url.searchParams.append('date', date);\n        url.searchParams.append('station', station);\n        url.searchParams.append('product', product);\n        url.searchParams.append('datum', datum);\n        url.searchParams.append('time_zone', time_zone);\n        url.searchParams.append('interval', interval);\n        url.searchParams.append('units', units);\n        url.searchParams.append('format', 'json');\n\n        console.debug(\"NOAATideQuery url: \" + url.href);\n        let tide_promise = axios.get(url.href, {header: {'Content-Type': 'application/json'}})\n            .then(function(tide_data) {\n                return(tide_data.data);\n            })\n        return(tide_promise);\n    }\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,gBAAgB,GAAG,yBAAyB;AAChD;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,iCAAiC;AACxD,IAAIC,2BAA2B,GAAG,+EAA+E;AACjH,IAAIC,mBAAmB,GAAG,2DAA2D;AACrF,eAAe;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,kBAAkB,WAAAA,mBAACC,MAAM,EACzB;IACI;IACA,IAAIC,GAAG,GAAG,IAAIC,GAAG,CAACP,gBAAgB,GAAG,gBAAgB,CAAC;IACtD,IAAG,UAAU,IAAIK,MAAM,IAAI,WAAW,IAAIA,MAAM,EAChD;MACIC,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAEJ,MAAM,CAACK,QAAQ,GAAG,GAAG,GAAGL,MAAM,CAACM,SAAS,CAAC;IAC9E;IACA,IAAG,OAAO,IAAIN,MAAM,EACpB;MACIC,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAEJ,MAAM,CAACO,KAAK,CAAC;IAClD;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAE1CD,OAAO,CAACE,KAAK,CAAC,8BAA8B,GAAGT,GAAG,CAACU,IAAI,CAAC;IACxD,IAAIC,MAAM,GAAGlB,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAACG,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CAC5EC,IAAI,CAAC,UAAAH,MAAM,EAAG;MACX,IAAG,MAAM,IAAIA,MAAM,EAAE;QACjB,OAAOA,MAAM,CAACI,IAAI,CAACC,QAAQ;MAC/B;IACJ,CAAC,CAAC;IACN,OAAOL,MAAM;EAEjB,CAAC;EACDM,WAAW,WAAAA,YAAClB,MAAM,EAClB;IACIQ,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,IAAIR,GAAG,GAAG,IAAIC,GAAG,CAACP,gBAAgB,GAAG,QAAQ,CAAC;IAC9C,IAAG,UAAU,IAAIK,MAAM,IAAI,WAAW,IAAIA,MAAM,EAChD;MACIC,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAEJ,MAAM,CAACK,QAAQ,GAAG,GAAG,GAAGL,MAAM,CAACM,SAAS,CAAC;IAC9E;IAEAE,OAAO,CAACE,KAAK,CAAC,uBAAuB,GAAGT,GAAG,CAACU,IAAI,CAAC;IACjD,IAAIQ,aAAa,GAAGzB,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAACG,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CACnFC,IAAI,CAAC,UAASK,KAAK,EAAE;MAClB,IAAG,MAAM,IAAIA,KAAK,EAAE;QAChB,OAAOA,KAAK,CAACJ,IAAI,CAACC,QAAQ;MAC9B,CAAC,MACI;QACD,OAAO,EAAE;MACb;IACA,CAAC,CAAC,CACLI,KAAK,CAAC,UAAAC,KAAK,EAAG;MACX,IAAIC,aAAa,GAAG,EAAE;MACtB,IAAIC,WAAW,GAAG,GAAG;MACrB,IAAG,UAAU,IAAIF,KAAK,IAAIA,KAAK,CAACG,QAAQ,KAAKC,SAAS,EAAE;QACpDF,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAACE,MAAM;QACnC,IAAI,OAAO,IAAIL,KAAK,CAACG,QAAQ,CAACT,IAAI,EAAE;UAChC,IAAI,SAAS,IAAIM,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,EAAE;YACxCC,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,CAACM,OAAO;UACrD;QACJ,CAAC,MAAM;UACHL,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI;QACvC;QACAR,OAAO,CAACc,KAAK,CAAC,eAAe,GAAGE,WAAW,GAAE,eAAe,GAAGD,aAAa,CAAC;MACjF,CAAC,MACG;QACAf,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC,CAAC;IACN,OAAOH,aAAa;EACxB,CAAC;EACDU,qBAAqB,WAAAA,sBAAC5B,GAAG,EAAE;IACvBO,OAAO,CAACE,KAAK,CAAC,0BAA0B,GAAGT,GAAG,CAAC;IAC/CA,GAAG,GAAG,IAAIC,GAAG,CAACD,GAAG,CAAC;IAClB;IACA,IAAI6B,gBAAgB,GAAGpC,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAACG,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CACtFC,IAAI,CAAC,UAASgB,gBAAgB,EAAE;MAC7BA,gBAAgB;IACpB,CAAC,CAAC;IACN,OAAOD,gBAAgB;EAC3B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,sBAAsB,WAAAA,uBAAC3B,QAAQ,EAAEC,SAAS,EAAE;IACxCE,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAIR,GAAG,GAAG,IAAIC,GAAG,CAACP,gBAAgB,GAAG,UAAU,GAAGU,QAAQ,GAAG,GAAG,GAAGC,SAAS,CAAC;IAC7EE,OAAO,CAACE,KAAK,CAAC,0BAA0B,GAAGT,GAAG,CAACU,IAAI,CAAC;IACpD;IACA,IAAIsB,kBAAkB,GAAGvC,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAACG,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CACxFC,IAAI,CAAC,UAASmB,UAAU,EAAE;MACnB,IAAG,MAAM,IAAIA,UAAU,IAAI,YAAY,IAAIA,UAAU,CAAClB,IAAI,EAAE;QACxD,OAAQkB,UAAU,CAAClB,IAAI,CAACmB,UAAU;MACtC;IACR,CAAC,CAAC,CACDd,KAAK,CAAC,UAAAC,KAAK,EAAG;MACP,IAAIC,aAAa,GAAG,EAAE;MACtB,IAAIC,WAAW,GAAG,GAAG;MACrB,IAAG,UAAU,IAAIF,KAAK,IAAIA,KAAK,CAACG,QAAQ,KAAKC,SAAS,EAAE;QACpDF,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAACE,MAAM;QACnC,IAAI,OAAO,IAAIL,KAAK,CAACG,QAAQ,CAACT,IAAI,EAAE;UAChC,IAAI,SAAS,IAAIM,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,EAAE;YACxCC,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,CAACM,OAAO;UACrD;QACJ,CAAC,MAAM;UACHL,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI;QACvC;QACAR,OAAO,CAACc,KAAK,CAAC,eAAe,GAAGE,WAAW,GAAE,eAAe,GAAGD,aAAa,CAAC;MACjF,CAAC,MACG;QACAf,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC,CAAC;IAEV,OAAOW,kBAAkB;EAC7B,CAAC;EAEDG,2BAA2B,WAAAA,4BAACnC,GAAG,EAAE;IAC7BO,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnDR,GAAG,GAAG,IAAIC,GAAG,CAACD,GAAG,CAAC;IAClBO,OAAO,CAACE,KAAK,CAAC,uCAAuC,GAAGT,GAAG,CAAC;;IAE5D;IACA,IAAIoC,oBAAoB,GAAG3C,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAACG,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CAC1FC,IAAI,CAAC,UAAUuB,aAAa,EAAE;MAC3B,IAAG,MAAM,IAAIA,aAAa,EAAE;QACxB,OAAOA,aAAa,CAACtB,IAAI;MAC7B;IAEJ,CAAC,CAAC;IACN,OAAOqB,oBAAoB;EAC/B,CAAC;EACDE,+BAA+B,WAAAA,gCAACvC,MAAM,EAAE;IACpCQ,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACvD,IAAIR,GAAG,GAAGyB,SAAS;IACnB,IAAG,KAAK,IAAI1B,MAAM,EAClB;MACIC,GAAG,GAAG,IAAIC,GAAG,CAACF,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC,MACI;MACD,IAAG,cAAc,IAAIA,MAAM,EAAE;QACzBC,GAAG,GAAG,IAAIC,GAAG,CAACP,gBAAgB,GAAG,YAAY,GAAGK,MAAM,CAACwC,YAAY,GAAG,sBAAsB,CAAC;MACjG;IACJ;IACA,IAAGvC,GAAG,KAAKyB,SAAS,EAAE;MAClBlB,OAAO,CAACE,KAAK,CAAC,2CAA2C,GAAGT,GAAG,CAAC;;MAEhE;MACA,IAAIwC,eAAe,GAAG/C,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;QAACG,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAAC,CAAC,CAAC,CACrFC,IAAI,CAAC,UAAU2B,YAAY,EAAE;QAC1B,IAAI,MAAM,IAAIA,YAAY,IAAI,YAAY,IAAIA,YAAY,CAAC1B,IAAI,EAAE;UAC7D,OAAQ0B,YAAY,CAAC1B,IAAI,CAACmB,UAAU;QACxC;MACJ,CAAC,CAAC,CACDd,KAAK,CAAC,UAAAC,KAAK,EAAI;QACZ,IAAIC,aAAa,GAAG,EAAE;QACtB,IAAIC,WAAW,GAAG,GAAG;QACrB,IAAI,UAAU,IAAIF,KAAK,IAAIA,KAAK,CAACG,QAAQ,KAAKC,SAAS,EAAE;UACrDF,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAACE,MAAM;UACnC,IAAI,OAAO,IAAIL,KAAK,CAACG,QAAQ,CAACT,IAAI,EAAE;YAChC,IAAI,SAAS,IAAIM,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,EAAE;cACxCC,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,CAACM,OAAO;YACrD;UACJ,CAAC,MAAM;YACHL,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI;UACvC;UACAR,OAAO,CAACc,KAAK,CAAC,eAAe,GAAGE,WAAW,GAAG,eAAe,GAAGD,aAAa,CAAC;QAClF,CAAC,MAAM;UACHf,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;QACxB;MACJ,CAAC,CAAC;MACN,OAAQmB,eAAe;IAC3B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEIE,cAAc,WAAAA,eAAC3C,MAAM,EAAE;IACnBQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAIR,GAAG,GAAGyB,SAAS;IACnB,IAAIkB,kBAAkB,GAAG,KAAK;IAC9B,IAAG,UAAU,IAAI5C,MAAM,IAAI,WAAW,IAAIA,MAAM,EAChD;MACIC,GAAG,GAAG,IAAIC,GAAG,CAACP,gBAAgB,GAAG,UAAU,GAAGK,MAAM,CAACK,QAAQ,GAAG,GAAG,GAAGL,MAAM,CAACM,SAAS,CAAC;IAC3F;IACA,+GACK,IAAG,KAAK,IAAIN,MAAM,EACvB;MACIC,GAAG,GAAG,IAAIC,GAAG,CAACF,MAAM,CAACC,GAAG,CAAC;MACzB2C,kBAAkB,GAAG,IAAI;IAC7B;IACApC,OAAO,CAACE,KAAK,CAAC,0BAA0B,GAAGT,GAAG,CAACU,IAAI,CAAC;IACpD,IAAIkC,gBAAgB,GAAGnB,SAAS;IAChC,IAAG,CAACkB,kBAAkB,EAAE;MACpB;MACA;MACAC,gBAAgB,GAAGnD,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;QAACG,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAAC,CAAC,CAAC,CAClFC,IAAI,CAAC,UAAU+B,mBAAmB,EAAE;QACjC,IAAI,MAAM,IAAIA,mBAAmB,IAAI,YAAY,IAAIA,mBAAmB,CAAC9B,IAAI,EAAE;UAC3E,IAAI+B,YAAY,GAAGD,mBAAmB,CAAC9B,IAAI,CAACmB,UAAU,CAACa,QAAQ;UAC/DtD,KAAK,CAACmB,GAAG,CAACkC,YAAY,EAAE;YAACjC,OAAO,EAAE;cAAC,cAAc,EAAE;YAAkB;UAAC,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUkC,aAAa,EAAE;YACnG,IAAI,MAAM,IAAIA,aAAa,IAAI,YAAY,IAAIA,aAAa,CAACjC,IAAI,EAAE;cAC/D,OAAQiC,aAAa,CAACjC,IAAI;YAC9B;UACJ,CAAC,CAAC;UACF;QACJ;MACJ,CAAC,CAAC,CACDD,IAAI,CAAC,UAAAiC,QAAQ,EAAI;QACd,IAAI,MAAM,IAAIA,QAAQ,EAAE;UACpB,OAAOA,QAAQ,CAAChC,IAAI;QACxB;MACJ,CAAC,CAAC,CACDK,KAAK,CAAC,UAAAC,KAAK,EAAI;QACZ,IAAIC,aAAa,GAAG,EAAE;QACtB,IAAIC,WAAW,GAAG,GAAG;QACrB,IAAI,UAAU,IAAIF,KAAK,IAAIA,KAAK,CAACG,QAAQ,KAAKC,SAAS,EAAE;UACrDF,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAACE,MAAM;UACnC,IAAI,OAAO,IAAIL,KAAK,CAACG,QAAQ,CAACT,IAAI,EAAE;YAChC,IAAI,SAAS,IAAIM,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,EAAE;cACxCC,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI,CAACM,KAAK,CAACM,OAAO;YACrD;UACJ,CAAC,MAAM;YACHL,aAAa,GAAGD,KAAK,CAACG,QAAQ,CAACT,IAAI;UACvC;UACAR,OAAO,CAACc,KAAK,CAAC,eAAe,GAAGE,WAAW,GAAG,eAAe,GAAGD,aAAa,CAAC;QAClF,CAAC,MAAM;UACHf,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;QACxB;MACJ,CAAC,CAAC;IACV,CAAC,MACI;MACDuB,gBAAgB,GAAGnD,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;QAACG,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB;MAAC,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUkC,aAAa,EAAE;QAClH,IAAI,MAAM,IAAIA,aAAa,IAAI,YAAY,IAAIA,aAAa,CAACjC,IAAI,EAAE;UAC/D,OAAQiC,aAAa,CAACjC,IAAI;QAC9B;MACJ,CAAC,CAAC;IACN;IACA,OAAO6B,gBAAgB;EAE3B,CAAC;EACD;AACJ;AACA;AACA;EACIK,aAAa,WAAAA,cAAClD,MAAM,EAAE;IAClBQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IAErC,IAAIR,GAAG,GAAGyB,SAAS;IACnB,IAAIyB,UAAU,GAAG,QAAQ;IACzB,IAAG,MAAM,IAAInD,MAAM,EACnB;MACI,IAAGA,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE;QAC1BmD,UAAU,GAAG,OAAO;MACxB;IACJ;IACA,IAAG,WAAW,IAAInD,MAAM,EACxB;MACI,IAAGmD,UAAU,IAAI,QAAQ,EACzB;QACIlD,GAAG,GAAG,IAAIC,GAAG,CAACN,gBAAgB,GAAG,6BAA6B,GAAGI,MAAM,CAACoD,SAAS,GAAG,OAAO,CAAC;MAChG,CAAC,MACI;QACDnD,GAAG,GAAG,IAAIC,GAAG,CAACN,gBAAgB,GAAG,6BAA6B,GAAGI,MAAM,CAACoD,SAAS,GAAG,OAAO,CAAC;MAChG;MACA;AACZ;AACA;AACA;AACA;IACQ,CAAC,MACI,IAAG,MAAM,IAAIpD,MAAM,IAAI,YAAY,IAAIA,MAAM,EAClD;MACI;AACZ;AACA;AACA;AACA;AACA;MACYC,GAAG,GAAG,IAAIC,GAAG,CAACN,gBAAgB,GAAG,8BAA8B,GAAGI,MAAM,CAACqD,IAAI,GAAG,SAAS,GAAGrD,MAAM,CAACsD,UAAU,GAAG,OAAO,CAAC;IAC5H;IACA9C,OAAO,CAACE,KAAK,CAAC,yBAAyB,GAAGT,GAAG,CAACU,IAAI,CAAC;IAEnD,IAAI4C,gBAAgB,GAAG7D,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,CAAC,CACrCI,IAAI,CAAC,UAASyC,QAAQ,EAAE;MACrB,IAAG,MAAM,IAAIA,QAAQ,EAAE;QACnB,OAAQA,QAAQ,CAACxC,IAAI;MACzB,CAAC,MACI;QACDR,OAAO,CAACc,KAAK,CAAC,uCAAuC,CAAC;QACtD,OAAO,EAAE;MACb;IACJ,CAAC,CAAC;IACN,OAAOiC,gBAAgB;EAG3B,CAAC;EAED;AACJ;AACA;AACA;EACIE,mBAAmB,EAAE,SAAAA,oBAASpD,QAAQ,EAAEC,SAAS,EAAEoD,MAAM,EACzD;IACIlD,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAC;IAC7C,IAAIT,GAAG,GAAG,IAAIC,GAAG,CAACL,2BAA2B,CAAC;IAC9CI,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,KAAK,EAAEC,QAAQ,CAAC;IACxCJ,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,KAAK,EAAEE,SAAS,CAAC;IACzC,IAAGoD,MAAM,IAAIhC,SAAS,EACtB;MACIzB,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,EAAEsD,MAAM,CAAC;IAC7C,CAAC,MAED;MACIzD,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1C;IACAI,OAAO,CAACE,KAAK,CAAC,2BAA2B,GAAGT,GAAG,CAACU,IAAI,CAAC;IACrD,IAAIgD,oBAAoB,GAAGjE,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAACG,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CAC1FC,IAAI,CAAC,UAAS6C,YAAY,EAAC;MACxB,IAAG,MAAM,IAAIA,YAAY,EAAE;QACvB,OAAOA,YAAY,CAAC5C,IAAI;MAC5B,CAAC,MACI;QACDR,OAAO,CAACc,KAAK,CAAC,0CAA0C,CAAC;MAC7D;IACJ,CAAC,CAAC;IACN,OAAOqC,oBAAoB;EAC/B,CAAC;EACDE,aAAa,EAAE,SAAAA,cAASC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IAC/E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA5D,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC;IACvC,IAAIT,GAAG,GAAG,IAAIC,GAAG,CAACJ,mBAAmB,CAAC;IACtCG,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,MAAM,EAAE0D,IAAI,CAAC;IACrC7D,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,SAAS,EAAE2D,OAAO,CAAC;IAC3C9D,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,SAAS,EAAE4D,OAAO,CAAC;IAC3C/D,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAE6D,KAAK,CAAC;IACvChE,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,WAAW,EAAE8D,SAAS,CAAC;IAC/CjE,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,UAAU,EAAE+D,QAAQ,CAAC;IAC7ClE,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAEgE,KAAK,CAAC;IACvCnE,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;IAEzCI,OAAO,CAACE,KAAK,CAAC,qBAAqB,GAAGT,GAAG,CAACU,IAAI,CAAC;IAC/C,IAAI0D,YAAY,GAAG3E,KAAK,CAACmB,GAAG,CAACZ,GAAG,CAACU,IAAI,EAAE;MAAC2D,MAAM,EAAE;QAAC,cAAc,EAAE;MAAkB;IAAC,CAAC,CAAC,CACjFvD,IAAI,CAAC,UAASwD,SAAS,EAAE;MACtB,OAAOA,SAAS,CAACvD,IAAI;IACzB,CAAC,CAAC;IACN,OAAOqD,YAAY;EACvB;AACJ,CAAC"}]}