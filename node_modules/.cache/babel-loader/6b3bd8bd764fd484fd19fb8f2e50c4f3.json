{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/nws_alerts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/nws_alerts.vue","mtime":1682360357866},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/babel.config.js","mtime":1682360357849},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682365544304},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682365544513}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["RipCurrentModal","NWSForecastBlock","TideChartBlock","UVIndexModal","NWSApi","DataAPI","nws_alert","compass_array","moment","name","props","type","Number","default","undefined","String","components","data","rip_current_alert","rip_current_nws_event","rip_current_details","nws_rip_current_event","show_rip_current_modal","rip_current_record","nws_alerts","forecast_record","point_information","closet_obs_station","latest_obs_data","show_uv_index_modal","uv_index_data","current_uv_index","current_uv_index_rating","current_uv_color_class","tide_station","tide_chart_data","created","mounted","_this","vm","console","debug","GetNWSPointInformation","latitude","longitude","then","point_info","GetObservingStationsforGrid","observationStations","station_list","features","GetNWSStationLatestObservations","station_code","properties","stationIdentifier","obs_data","GetNWSForecast","url","forecast","error","status","detail","catch","error_message","status_code","response","message","GetNWSActiveAlerts","alerts","surf_alert","surf_alert_details","rip_current_found","i","length","feature","alert","parse_api_response","event","description","search","error_handler","EPAGetUVIndex","post_code","uv_index","find_uv_index","NOAAFindTideStation","tide_stations","stationList","stationType","NOAATideQuery","stationId","methods","text_color","alert_message","match","forecast_period","period_number","periods","now","uv_forecast_time","DATE_TIME","hour","UV_VALUE","computed","current_wind_speed_direction","windSpeed","value","wind_spd_mph","index","windDirection","dir_index","parseInt","compass_val","toFixed","e","exception","current_air_temperature","temperature","temp_f"],"sources":["src/components/nws_alerts.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-sm-3 fs-5\">\n        Temperature: {{current_air_temperature}}\n      </div>\n      <div class=\"col-sm-3  fs-5\">\n        Wind: {{current_wind_speed_direction}}\n      </div>\n    </div>\n    <div v-if=\"tide_chart_data !== undefined\">\n      <div class=\"row\">\n        <div class=\"col fs-4\" >\n          Tides\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <TideChartBlock :tide_station=\"tide_station.stationName\"\n                          :tide_station_id=\"tide_station.stationId\"\n                          :tide_data=\"tide_chart_data.predictions\"></TideChartBlock>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-12 fs-4\">\n        Alerts\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-3 fs-5\">\n        <div>\n          <a @click=\"show_rip_current_modal=true\"> Rip Currents <i class=\"bi bi-info-circle info-icon\"></i></a>\n        </div>\n        <div class=\"ms-5\" :class=\"text_color(rip_current_nws_event)\">\n          {{rip_current_alert}}\n        </div>\n        <RipCurrentModal v-show=\"show_rip_current_modal\"\n                       @close-rip-current-modal=\"show_rip_current_modal = false\"\n                       :alert_message=\"rip_current_details\">\n        </RipCurrentModal>\n      </div>\n      <div class=\"col-sm-3 fs-5\">\n        <div v-if=\"uv_index_data !== undefined\">\n          <div>\n            <a @click=\"show_uv_index_modal=true\">UV Index <i class=\"bi bi-info-circle info-icon\"></i></a>\n          </div>\n          <div class=\"ms-5\" :class=\"current_uv_color_class\">\n            {{this.current_uv_index}}-{{current_uv_index_rating}}\n          </div>\n        </div>\n        <UVIndexModal current_uv_index=\"current_uv_index_rating\" v-show=\"show_uv_index_modal\" @close-uv-index-modal=\"show_uv_index_modal = false\"></UVIndexModal>\n      </div>\n    </div>\n    <div v-if=\"forecast_record !== undefined\" class=\"row mt-3\">\n      <div class=\"col-sm-3\">\n        <NWSForecastBlock forecast_block_id=\"forecast_0\" :forecast=\"forecast_period(0)\"></NWSForecastBlock>\n      </div>\n      <div class=\"col-sm-3\">\n        <NWSForecastBlock forecast_block_id=\"forecast_1\" :forecast=\"forecast_period(1)\"></NWSForecastBlock>\n      </div>\n      <div class=\"col-sm-3\">\n        <NWSForecastBlock forecast_block_id=\"forecast_2\" :forecast=\"forecast_period(2)\"></NWSForecastBlock>\n      </div>\n      <div class=\"col-sm-3\">\n        <NWSForecastBlock forecast_block_id=\"forecast_3\" :forecast=\"forecast_period(3)\"></NWSForecastBlock>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import RipCurrentModal from \"@/components/rip_current_modal\";\n  import NWSForecastBlock from \"@/components/nws_forecast_block\";\n  import TideChartBlock from \"@/components/tide_prediction\";\n  import UVIndexModal from \"@/components/uv_index_modal\";\n  import NWSApi from \"@/utilities/nws_rest_api\";\n  import DataAPI from \"@/utilities/rest_api\";\n  import nws_alert from \"@/utilities/nws_classes\";\n  import {compass_array} from \"@/utilities/direction_to_compass\";\n\n  import moment from \"moment\";\n\n  export default {\n    name: 'NWSAlertsPage',\n      props: {\n        'longitude': {type: Number, default: undefined},\n        'latitude': {type: Number, default: undefined},\n        'post_code': {type: String, default: undefined}\n      },\n    components: {\n      RipCurrentModal,\n      NWSForecastBlock,\n      TideChartBlock,\n      UVIndexModal\n    },\n    data() {\n      return {\n        rip_current_alert: \"Data Unavailable\",\n        rip_current_nws_event: '',\n        rip_current_details: \"No current alerts\",\n        nws_rip_current_event: \"\",\n        show_rip_current_modal: false,\n        rip_current_record: undefined,\n        nws_alerts: [],\n        forecast_record: undefined,\n        point_information: undefined,\n        closet_obs_station: undefined,\n        latest_obs_data: undefined,\n        show_uv_index_modal: false,\n        uv_index_data: undefined,\n        current_uv_index: undefined,\n        current_uv_index_rating: 'Data Unavailable',\n        current_uv_color_class: '',\n        tide_station: undefined,\n        tide_chart_data: undefined\n      }\n    },\n    created() {\n      this.rip_current_record = new nws_alert();\n    },\n    mounted() {\n      let vm = this;\n      console.debug(\"NWSAlertsPage mounted.\");\n      /*\n      We do the point query to get the links for the forecast and observation links for the grid.\n      */\n      NWSApi.GetNWSPointInformation(this.latitude, this.longitude).then(point_info => {\n        if(point_info != undefined)\n        {\n          vm.point_information = point_info\n          NWSApi.GetObservingStationsforGrid(vm.point_information.observationStations).then(station_list => {\n            vm.closet_obs_station = station_list.features[0];\n            NWSApi.GetNWSStationLatestObservations({station_code: vm.closet_obs_station.properties.stationIdentifier})\n                .then(obs_data => {\n                  vm.latest_obs_data = obs_data;\n                })\n            vm.forecast_record = undefined;\n            NWSApi.GetNWSForecast({url:vm.point_information.forecast}).then(forecast => {\n              if(forecast != undefined)\n              {\n                if('properties' in forecast)\n                {\n                  vm.forecast_record = forecast.properties;\n                }\n                else {\n                  if ('status' in forecast) {\n                    console.error(\"Status: \" + forecast.status + \" \" + forecast.detail);\n                  }\n                  else {\n                    console.error(\"Failed to retrieve the forecast, no data payload or error payload.\");\n\n                  }\n                }\n              }\n            }).catch(error=> {\n              vm.forecast_record = undefined;\n              let error_message = '';\n              let status_code = 404;\n              if ('response' in error && error.response !== undefined) {\n                status_code = error.response.status;\n                if ('error' in error.response.data) {\n                  if ('message' in error.response.data.error) {\n                    error_message = error.response.data.error.message;\n                  }\n                } else {\n                  error_message = error.response.data;\n                }\n                console.error(\"Status code: \" + status_code + \". Error Msg: \" + error_message);\n              } else {\n                console.error(error);\n              }\n            });\n\n            })\n        }\n        else {\n          console.error(\"GetNWSPointInformation returned undefined.\")\n        }\n      }).catch(error => {\n        let error_message = '';\n        let status_code = 404;\n        if('response' in error && error.response !== undefined) {\n          status_code = error.response.status;\n          if ('error' in error.response.data) {\n            if ('message' in error.response.data.error) {\n              error_message = error.response.data.error.message;\n            }\n          } else {\n            error_message = error.response.data;\n          }\n          console.error(\"Status code: \" + status_code +\". Error Msg: \" + error_message);\n        }\n        else{\n          console.error(error);\n        }\n      });\n\n      /*\n      NWSApi.GetNWSZones({longitude: this.longitude, latitude: this.latitude}).then((zone_data)=>{\n        zone_data;\n        vm;\n      });\n      */\n      //{longitude: this.longitude, latitude: this.latitude, event: 'Rip Current Statement'}\n      NWSApi.GetNWSActiveAlerts({longitude: this.longitude, latitude: this.latitude}).then(alerts => {\n        vm.rip_current_alert =\n        vm.surf_alert = 'No Alerts';\n        vm.rip_current_details =\n        vm.surf_alert_details = \"No current alerts\";\n\n        let rip_current_found = false;\n        for(var i = 0; i < alerts.length; i++) {\n          let feature = alerts[i];\n          let alert = new nws_alert();\n          alert.parse_api_response(feature);\n           vm.nws_alerts[feature.properties.event] = alert;\n           if(feature.properties.event == 'Rip Current Statement')\n           {\n             //vm.rip_current_record.parse_api_response(feature);\n             vm.rip_current_alert = 'Rip Currents Present'\n             vm.rip_current_record = feature;\n             vm.rip_current_nws_event = feature.properties.event;\n             vm.rip_current_details = feature.properties.description;\n             rip_current_found = true\n           }\n           else if(feature.properties.event.search(/surf/i))\n          {\n            vm.surf_alert = feature.properties.event;\n            vm.surf_alert_details = feature.properties.description;\n          }\n        }\n        if(!rip_current_found)\n        {\n          vm.rip_current_alert = \"No Alerts\"\n        }\n      })\n      .catch(error => {\n        vm.rip_current_alert =\n        vm.surf_alert = 'Data Unavailable';\n        vm.rip_current_details =\n        vm.surf_alert_details = '';\n        DataAPI.error_handler('GetNWSActiveAlerts', error);\n      });\n      NWSApi.EPAGetUVIndex({post_code: this.post_code}).then(uv_index => {\n        vm.uv_index_data = uv_index;\n        vm.find_uv_index();\n      }).catch(error => {\n        vm.uv_index_data = undefined;\n        DataAPI.error_handler('EPAGetUVIndex', error);\n      });\n      NWSApi.NOAAFindTideStation(this.latitude, this.longitude, 20).then(tide_stations => {\n        this.tide_station = undefined;\n        //We loop the results looking for the closest harmonic station.\n        for(var i = 0; i < tide_stations.stationList.length; i+=1)\n        {\n          //The R stations are harmonic stations which will have the predictions.\n          if(tide_stations.stationList[i].stationType == 'R')\n          {\n            vm.tide_station = tide_stations.stationList[i];\n            break\n          }\n        }\n        if(this.tide_station != undefined)\n        {\n          NWSApi.NOAATideQuery('today',\n              vm.tide_station.stationId,\n              'predictions',\n              'STND',\n              'lst_ldt',\n              'hilo',\n              'english').then(tide_chart_data => {\n                vm.tide_chart_data = tide_chart_data;\n          })\n        }\n      }).catch(error => {\n        vm.tide_station = '';\n        vm.tide_chart_data = undefined;\n        DataAPI.error_handler('NOAAFindTideStation', error);\n\n      })\n      console.debug(\"NWSAlertsPage mounted finished.\");\n    },\n    methods: {\n      text_color: function(alert_message) {\n        let text_color = 'no_alert';\n        if(alert_message.match(/warning/i))\n        {\n          text_color = 'warning';\n        }\n        else if(alert_message.match(/advisory/i))\n        {\n          text_color = 'advisory';\n        }\n        else if(alert_message.match(/watch/i))\n        {\n          text_color = 'watch';\n        }\n        else if(alert_message.match(/statement/i))\n        {\n          text_color = 'warning';\n        }\n        return text_color;\n      },\n      forecast_period: function(period_number) {\n        if(this.forecast_record != undefined)\n        {\n          if(period_number < this.forecast_record.periods.length)\n          {\n            return(this.forecast_record.periods[period_number]);\n          }\n          else {\n            console.error(\"Period number request: \" + period_number + \" outside range.\");\n          }\n        }\n        return(undefined);\n      },\n      find_uv_index: function() {\n        let uv_index = -1;\n        this.current_uv_index = -1;\n        this.current_uv_index_rating = 'Data Unavailable';\n        this.current_uv_color_class = '';\n        if(this.uv_index_data != undefined) {\n          let now = moment();\n          /*Set the default index and rating to 0. UV Index forecast starts at 7am, so if we're checking before then\n          we won't have a forecast.\n           */\n          this.current_uv_index = 0;\n          this.current_uv_index_rating = 'Low'\n          for(var i= 0; i < this.uv_index_data.length; i++)\n          {\n            let uv_forecast_time = moment(this.uv_index_data[i].DATE_TIME, 'MMM/D/YYYY H A');\n            if(now.hour() == uv_forecast_time.hour())\n            {\n              uv_index = this.uv_index_data[i].UV_VALUE;\n              this.current_uv_index = uv_index;\n              if(this.current_uv_index <= 2)\n              {\n                this.current_uv_index_rating = \"Low\";\n                this.current_uv_color_class = 'uv_index_low';\n              }\n              else if(this.current_uv_index > 2 && this.current_uv_index <= 5)\n              {\n                this.current_uv_index_rating = \"Moderate\";\n                this.current_uv_color_class = 'uv_index_moderate';\n              }\n              else if(this.current_uv_index > 5 && this.current_uv_index <= 7)\n              {\n                this.current_uv_index_rating = \"High\";\n                this.current_uv_color_class = 'uv_index_high';\n              }\n              else if(this.current_uv_index > 7 && this.current_uv_index <= 10)\n              {\n                this.current_uv_index_rating = \"Very High\";\n                this.current_uv_color_class = 'uv_index_very_high';\n              }\n              else if(this.current_uv_index > 10)\n              {\n                this.current_uv_index_rating = \"Extreme\";\n                this.current_uv_color_class = 'uv_index_extreme';\n              }\n\n              break;\n            }\n          }\n        }\n        return uv_index;\n      },\n    },\n    computed: {\n      current_wind_speed_direction: function() {\n        if(this.latest_obs_data != undefined)\n        {\n          try {\n            if(this.latest_obs_data.windSpeed.value !== null) {\n              let wind_spd_mph = this.latest_obs_data.windSpeed.value * 0.621371;\n              let index = this.latest_obs_data.windDirection.value % 360;\n              let dir_index = parseInt(index / 22.5);\n              let compass_val = compass_array[dir_index];\n              return (wind_spd_mph.toFixed() + \"Mph \" + compass_val);\n            }\n            return(\"N/A\");\n          }\n          catch (e) {\n            console.exception(e);\n          }\n        }\n        return('');\n\n      },\n      current_air_temperature: function() {\n        if(this.latest_obs_data != undefined)\n        {\n          try {\n            if(this.latest_obs_data.temperature.value !== null) {\n              let temp_f = (this.latest_obs_data.temperature.value * 9 / 5) + 32;\n              return (temp_f.toFixed() + \" F\");\n            }\n            return(\"N/A\");\n          }\n          catch (e) {\n            console.exception(e);\n          }\n        }\n        return('');\n      },\n    }\n  }\n</script>\n<style>\n</style>\n"],"mappings":"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"}]}