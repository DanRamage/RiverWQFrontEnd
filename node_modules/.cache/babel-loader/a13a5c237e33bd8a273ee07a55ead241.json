{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/station_graph.vue","mtime":1682360357860},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/babel.config.js","mtime":1682360357849},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682365544304},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682365544513}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["moment","DataAPI","WQPlot","Highcharts","name","props","type","String","default","components","data","activeBtn","chartTypeBtn","site_description","chart_data","scatter_plot_data","pie_chart_data","scatter_chart_ref","undefined","pie_chart_ref","records_above_max_threshold","percentage_exceeds","total_records","scatter_chart_options","chart","defaultSeriesType","marginRight","marginLeft","marginTop","credits","enabled","title","text","colors","xAxis","endOnTick","showLastLabel","offset","dateTimeLabelFormats","day","week","month","year","labels","rotation","y","tickWidth","yAxis","showFirstLabel","tickPositioner","min","max","ticks","i","length","val2lin","formatter","value","style","gridLineWidth","lineWidth","margin","plotBands","color","from","$store","state","advisory_limits","low","minimum","to","hi","tooltip","dateFormat","x","Math","round","legend","series","pie_chart_options","plotBackgroundColor","plotBorderWidth","plotShadow","plotOptions","pie","allowPointSelect","cursor","dataLabels","format","colorByPoint","mounted","console","debug","$route","params","site_id","site_name","$refs","station_scatter_graph","station_pie_chart","pastData","methods","daysButtonClick","button_clicked","days","chartTypesButtonClick","chart_type","chartType","setExtremes","utc","subtract","valueOf","days_back","vm","location_site_name","start_date","end_date","GetSiteData","then","response","feature_data","site_type","properties","advisory","results","forEach","rec","date_val","date","push","calcStats","catch","error","data_array","parseInt","onClose","$emit","computed","get","set"],"sources":["src/components/station_graph.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"card\">\n            <div class=\"card-body data-graph\">\n                <button type=\"button\" class=\"app-button-style btn btn-primary avenir-font background_color\" @click=\"$router.go(-1)\">&laquo; Back</button>\n                <div class=\"mt-4 card-title font-avenir\">\n                    <h2>Site: {{site_name}}</h2>\n                </div>\n                <div class=\"card-subtitle avenir-font-light\">\n                   <h3>ID: {{site_id}}</h3>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div ref=\"days_buttons\" class=\"btn-group\">\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 30}\" @click=\"daysButtonClick($event, 30)\">30 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 60}\" @click=\"daysButtonClick($event,60)\">60 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 90}\" @click=\"daysButtonClick($event,90)\">90 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 180}\" @click=\"daysButtonClick($event,180)\">180 days</button>\n                            <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: activeBtn === 365}\" @click=\"daysButtonClick($event,365)\">365 days</button>\n                        </div>\n                    </div>\n                </div>\n              <div class=\"row mt-4\">\n                <div class=\"col-12\">\n                  <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: chartTypeBtn === 'pie'}\" @click=\"chartTypesButtonClick($event, 'pie')\">Pie Chart</button>\n                  <button type=\"button\" class=\"app-button-style btn btn-outline-primary\" :class=\"{active: chartTypeBtn === 'scatter'}\" @click=\"chartTypesButtonClick($event,'scatter')\">Scatter Plot</button>\n                </div>\n              </div>\n                <!---\n                <div class=\"row mt-4\">\n                  <div class=\"col-12\">\n                    <table>\n                      <tr>\n                        <td >Number of Samples</td>\n                        <td class=\"ml-3\">{{total_records}}</td>\n                      </tr>\n                      <tr>\n                        <td>Exceeds Threshold</td>\n                        <td class=\"ml-3\">{{records_above_max_threshold}}</td>\n                      </tr>\n                    </table>\n                    </div>\n                </div>\n                -->\n                <div v-show=\"chartType === 'scatter'\" class=\"row mt-4\">\n                    <div ref=\"scatter_plot_column\" class=\"col-12 full-graph\">\n                        <WQPlot\n                                ref=\"station_scatter_graph\"\n                                :chart_options=\"scatter_chart_options\"\n                                id='station_scatter_graph'\n                                :station_data=\"scatter_plot_data\">\n                        </WQPlot>\n                    </div>\n                </div>\n                <div v-show=\"chartType === 'pie'\" class=\"row mt-4\">\n                    <div ref=\"pie_chart_column\" class=\"col-6 full-graph\">\n                        <WQPlot ref=\"station_pie_chart\"\n                                :chart_options=\"pie_chart_options\"\n                                id='station_pie_chart'\n                                :station_data=\"pie_chart_data\">\n                        </WQPlot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import moment from 'moment';\n    import DataAPI from \"../utilities/rest_api\";\n\n    import WQPlot from \"@/components/scatter_plot\";\n    import Highcharts from 'highcharts';\n\n    export default {\n        name: 'StationGraph',\n        props: {\n            'site_id': {type: String, default: 'Site Id'},\n        },\n        components: {\n            WQPlot\n        },\n        data()\n        {\n            return {\n                activeBtn: 60,\n                chartTypeBtn: 'pie',\n                site_description: '',\n                //graph_data: [],\n                chart_data: [],\n                scatter_plot_data: [],\n                pie_chart_data: [],\n                scatter_chart_ref: undefined,\n                pie_chart_ref: undefined,\n                records_above_max_threshold: 0,\n                percentage_exceeds: 0,\n                total_records: 0,\n                scatter_chart_options: {\n                    chart: {\n                        //backgroundColor: 'rgba(0,0,0,0)',\n                        defaultSeriesType: 'scatter',\n                        marginRight: 0,\n                        marginLeft: 65,\n                        marginTop: 20\n                    },\n                    credits: {\n                        enabled: false\n                    },\n                    title: {\n                        text: null\n                    },\n                    colors: ['#333333'],\n                    xAxis: {\n                        endOnTick: true,\n                        showLastLabel: false,\n                        title: {\n                            text: 'Date',\n                            offset: 30\n                        },\n                        type: 'datetime',\n                        dateTimeLabelFormats: {\n                            day: '%e %b \\'%y',\n                            week: '%e %b \\'%y',\n                            month: '%e %b \\'%y',\n                            year: '%e %b \\'%y',\n                        },\n                        labels: {\n                            rotation: 0,\n                            y: 20\n                        },\n                        tickWidth: 0\n                    },\n                    yAxis: {\n                        type: 'logarithmic',\n                        showFirstLabel: false,\n                        tickPositioner: function (min, max) {\n                            min;\n                            max;\n                            var ticks = [1, 10, 100, 1000, 10000],\n                                i = ticks.length;\n\n                            while (i--)\n                                ticks[i] = this.val2lin(ticks[i]);\n\n                            return ticks;\n                        },\n                        labels: {\n                            formatter: function () {\n                                return this.value < 10 ? 1 : this.value;\n                            },\n                            style: {\n                                \"color\": \"#FFFFFF\"\n                            }\n                        },\n                        gridLineWidth: 0,\n                        lineWidth: 1,\n                        title: {\n                            text: 'Bacteria per 100 mL',\n                            margin: 0\n                        },\n                        plotBands: [\n                            {\n                                color: '#96ca2d',\n                                from: this.$store.state.advisory_limits.low.minimum,\n                                to: this.$store.state.advisory_limits.hi.minimum\n                            },\n                            {\n                                color: '#DB1A0F',\n                                from: this.$store.state.advisory_limits.hi.minimum,\n                                to: 10000\n                            }\n                        ]\n                    },\n                    tooltip: {\n                        formatter: function () {\n                            return '<strong>Date:</strong> ' + Highcharts.dateFormat('%e %B %Y', this.x) + '<br /><strong>Bacteria level:</strong> ' + Math.round(this.y);\n                        }\n                    },\n                    legend: {\n                        enabled: false\n                    },\n                    series: [{\n                        name: 'Station',\n                        data: []\n                    }]\n\n                },\n                pie_chart_options:\n                    {\n                      chart: {\n                        plotBackgroundColor: null,\n                        plotBorderWidth: null,\n                        plotShadow: false,\n                        type: 'pie'\n                      },\n                      title: {\n                        text: null,\n                      },\n                      /*tooltip: {\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n                      },*/\n                      /*accessibility: {\n                        point: {\n                          valueSuffix: '%'\n                        }\n                      },*/\n                      plotOptions: {\n                        pie: {\n                          allowPointSelect: true,\n                          cursor: 'pointer',\n                          dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {point.y}'\n                          }\n                        }\n                      },\n                      series: [{\n                        name: 'Sample Counts',\n                        colorByPoint: true,\n                        data: []\n                      }]\n                    }\n            }\n        },\n        mounted() {\n            console.debug(\"StationGraph mounted.\");\n\n            //We aren't passing the props in the vue route path, so we check the params to then set the properties.\n            if('params' in this.$route) {\n                if('site_id' in this.$route.params)\n                {\n                    this.site_id = this.$route.params.site_id;\n                }\n                if('site_name' in this.$route.params)\n                {\n                    this.site_name = this.$route.params.site_name;\n                }\n                /*\n                if('graph_data' in this.$route.params)\n                {\n                    this.graph_data = this.$route.params.graph_data;\n                }\n                */\n            }\n\n            //We pull the last 60 days worth of data to show.\n            this.scatter_chart_ref = this.$refs.station_scatter_graph;\n            this.pie_chart_ref = this.$refs.station_pie_chart;\n            this.pastData(60);\n        },\n        methods: {\n            daysButtonClick(button_clicked, days) {\n                this.activeBtn = days;  //We use this to toggle the active class on the button.≠≠\n                this.pastData(days);\n            },\n            chartTypesButtonClick(button_clicked, chart_type) {\n                console.debug(\"chartTypesButtonClick called, chart type: \" + chart_type);\n                this.chartType = chart_type;\n                if(chart_type === 'scatter') {\n                  if(this.scatter_chart_ref === undefined) {\n                    this.scatter_chart_ref = this.$refs.station_scatter_graph;\n                    this.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(this.activeBtn, \"days\").valueOf(), moment.utc().valueOf());\n                  }\n                }\n                else\n                {\n                  if(this.$refs.station_pie_chart == undefined) {\n                    this.pie_chart_ref = this.$refs.station_pie_chart;\n                  }\n                }\n            },\n            pastData(days_back) {\n                console.debug(\"Retrieving: \" + days_back + \" days of data.\")\n                let vm=this;\n                let location_site_name = this.$store.state.site_name;\n                let start_date = moment().subtract(days_back, 'days').format(\"YYYY-MM-DD 00:00:00\");\n                let end_date = moment.utc().format(\"YYYY-MM-DD HH:mm:ss\");\n                //this.graph_data = [];\n                this.pie_chart_data = [];\n                this.scatter_plot_data = [];\n                DataAPI.GetSiteData(location_site_name, this.site_id, start_date, end_date)\n                    .then(response => {\n                        vm.feature_data = response.data;\n                        let site_type = vm.feature_data.properties.site_type;\n                        if (site_type in vm.feature_data.properties) {\n                            vm.feature_data.properties[site_type].advisory.results.forEach(function (rec) {\n                                let date_val = moment(rec.date);\n                                vm.scatter_plot_data.push([date_val.valueOf(), rec.value]);\n                            });\n                            if(vm.scatter_chart_ref !== undefined) {\n                              vm.scatter_chart_ref.chart.xAxis[0].setExtremes(moment.utc().subtract(days_back, \"days\").valueOf(), moment.utc().valueOf());\n                            }\n                            vm.calcStats(vm, vm.scatter_plot_data);\n                        }\n                    })\n                    .catch(error => console.error(error));\n\n            },\n            calcStats(vm, data_array) {\n              console.debug(\"calcStats called.\");\n              vm.records_above_max_threshold = 0;\n              vm.total_records = 0;\n              if(data_array.length) {\n                data_array.forEach(function (rec) {\n                  if (rec[1] >= vm.$store.state.advisory_limits.hi.minimum) {\n                    vm.records_above_max_threshold += 1;\n                  }\n                });\n                vm.total_records = data_array.length;\n                vm.pie_chart_data = [\n                  {\n                    name: 'Sample Count',\n                    y: vm.total_records,\n                    color: 'grey'\n                  },\n                  {\n                    name: 'Samples Above Limit',\n                    y: vm.records_above_max_threshold,\n                    color: 'red'\n                  }\n                ]\n                vm.percentage_exceeds = parseInt((vm.records_above_max_threshold / vm.total_records) * 100.0);\n                //let median_val = 0;\n                //let vals = data_array.map(function (x) {\n                //  return x[1]\n                //})\n                //median_val = mean(vals);\n                console.debug(\"Total Samples: \" + vm.total_records + \"Bad Samples: \" + vm.records_above_max_threshold);\n              }\n            },\n            onClose() {\n                console.debug(\"onClose modal_graph_closed event emitted.\");\n                this.$emit(\"modal_graph_closed\");\n            }\n        },\n        computed: {\n          chartType: {\n            get: function() {\n              return this.chartTypeBtn;\n            },\n            set: function(chart_type) {\n              this.chartTypeBtn = chart_type;\n            }\n          }\n          /*\n          graph_data: {\n            get: function() {\n              console.debug(\"graph_data computed called.\")\n              return(this.chart_data);\n            },\n            set: function(scatter_plot_data, pie_chart_data) {\n              if(this.chartTypeBtn == 'scatter') {\n                this.chart_data = scatter_plot_data;\n              }\n              else {\n                this.chart_data = pie_chart_data;\n              }\n\n            }\n          },\n          chart_options: function() {\n            console.debug(\"chart_options computed called.\")\n            if(this.chartTypeBtn == 'scatter') {\n              return this.scatter_chart_options;\n            }\n            else {\n              return this.pie_chart_options;\n            }\n          }\n          */\n        }\n\n    }\n</script>\n<style scoped>\n    .full-graph {\n        width: 100%;\n        height: 100%;\n    }\n    .data-graph {\n        background-color: rgba(0, 61, 126, .85);\n        color: #FFFFFF\n    }\n\n</style>\n"],"mappings":"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"}]}