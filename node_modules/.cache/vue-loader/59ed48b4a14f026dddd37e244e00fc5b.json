{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/ol_map_page.vue?vue&type=style&index=1&id=8be73058&scoped=true&lang=css&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/ol_map_page.vue","mtime":1682363936932},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/css-loader/dist/cjs.js","mtime":1682361371291},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1682361372711},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/postcss-loader/src/index.js","mtime":1682361371633},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682361372188}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi53cmFwcGVyIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICAgcGVyc3BlY3RpdmU6IDE1MDBweDsKfQoKI3NpZGViYXIgewogICAgbWluLXdpZHRoOiAzMDBweDsKICAgIG1heC13aWR0aDogMzAwcHg7CiAgICBiYWNrZ3JvdW5kOiAjNzM4NkQ1OwogICAgY29sb3I6ICNmZmY7CiAgICB0cmFuc2l0aW9uOiBhbGwgMC42cyBjdWJpYy1iZXppZXIoMC45NDUsIDAuMDIwLCAwLjI3MCwgMC42NjUpOwogICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGxlZnQ7Cn0KCiNzaWRlYmFyLmFjdGl2ZSB7CiAgICBtYXJnaW4tbGVmdDogLTMwMHB4OwogICAgdHJhbnNmb3JtOiByb3RhdGVZKDEwMGRlZyk7Cn0KCiNzaWRlYmFyIC5zaWRlYmFyLWhlYWRlciB7CiAgICBwYWRkaW5nOiAyMHB4OwogICAgYmFja2dyb3VuZDogIzZkN2ZjYzsKfQoKI3NpZGViYXIgdWwuY29tcG9uZW50cyB7CiAgICBwYWRkaW5nOiAyMHB4IDA7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzQ3NzQ4YjsKfQoKI3NpZGViYXIgdWwgcCB7CiAgICBjb2xvcjogI2ZmZjsKICAgIHBhZGRpbmc6IDEwcHg7Cn0KCiNzaWRlYmFyIHVsIGxpIGEgewogICAgcGFkZGluZzogMTBweDsKICAgIGZvbnQtc2l6ZTogMS4xZW07CiAgICBkaXNwbGF5OiBibG9jazsKfQojc2lkZWJhciB1bCBsaSBhOmhvdmVyIHsKICAgIGNvbG9yOiAjNzM4NkQ1OwogICAgYmFja2dyb3VuZDogI2ZmZjsKfQoKI3NpZGViYXIgdWwgbGkuYWN0aXZlID4gYSwgYVthcmlhLWV4cGFuZGVkPSJ0cnVlIl0gewogICAgY29sb3I6ICNmZmY7CiAgICBiYWNrZ3JvdW5kOiAjNmQ3ZmNjOwp9Cgojc2lkZWJhckNvbGxhcHNlIHsKICAgIHdpZHRoOiA0MHB4OwogICAgaGVpZ2h0OiA0MHB4OwogICAgYmFja2dyb3VuZDogI2Y1ZjVmNTsKfQoKI3NpZGViYXJDb2xsYXBzZSBzcGFuIHsKICAgIHdpZHRoOiA4MCU7CiAgICBoZWlnaHQ6IDJweDsKICAgIG1hcmdpbjogMCBhdXRvOwogICAgZGlzcGxheTogYmxvY2s7CiAgICBiYWNrZ3JvdW5kOiAjNTU1OwogICAgdHJhbnNpdGlvbjogYWxsIDAuOHMgY3ViaWMtYmV6aWVyKDAuODEwLCAtMC4zMzAsIDAuMzQ1LCAxLjM3NSk7Cn0KI3NpZGViYXJDb2xsYXBzZSBzcGFuOmZpcnN0LW9mLXR5cGUgewogICAgLyogcm90YXRlIGZpcnN0IG9uZSAqLwogICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgycHgsIDJweCk7Cn0KI3NpZGViYXJDb2xsYXBzZSBzcGFuOm50aC1vZi10eXBlKDIpIHsKICAgIC8qIHNlY29uZCBvbmUgaXMgbm90IHZpc2libGUgKi8KICAgIG9wYWNpdHk6IDA7Cn0KI3NpZGViYXJDb2xsYXBzZSBzcGFuOmxhc3Qtb2YtdHlwZSB7CiAgICAvKiByb3RhdGUgdGhpcmQgb25lICovCiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgxcHgsIC0xcHgpOwp9CiNzaWRlYmFyQ29sbGFwc2UuYWN0aXZlIHNwYW4gewogICAgLyogbm8gcm90YXRpb24gKi8KICAgIHRyYW5zZm9ybTogbm9uZTsKICAgIC8qIGFsbCBiYXJzIGFyZSB2aXNpYmxlICovCiAgICBvcGFjaXR5OiAxOwogICAgbWFyZ2luOiA1cHggYXV0bzsKfQojc2lkZWJhckNvbGxhcHNlIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHotaW5kZXg6IDEwMDA7CiAgICB0b3A6IDdlbTsKICAgIGxlZnQ6IC43NWVtOwp9CiNjb250ZW50IHsKICAgIHdpZHRoOiAxMDAlOwogICAgbWluLWhlaWdodDogMTAwdmg7CiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsKfQoKLnNpZGViYXItb3BhY2l0eSB7CiAgICBvcGFjaXR5OiAwLjk7Cn0KQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7CiAgICAjc2lkZWJhciB7CiAgICAgICAgbWFyZ2luLWxlZnQ6IC0zMDBweDsKICAgIH0KICAgICNzaWRlYmFyLmFjdGl2ZSB7CiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7CiAgICB9CiAgICAjc2lkZWJhci5hY3RpdmUgewogICAgICAgIG1hcmdpbi1sZWZ0OiAwOwogICAgICAgIHRyYW5zZm9ybTogbm9uZTsKICAgIH0KICAgICNzaWRlYmFyQ29sbGFwc2Ugc3BhbjpmaXJzdC1vZi10eXBlLAogICAgI3NpZGViYXJDb2xsYXBzZSBzcGFuOm50aC1vZi10eXBlKDIpLAogICAgI3NpZGViYXJDb2xsYXBzZSBzcGFuOmxhc3Qtb2YtdHlwZSB7CiAgICAgICAgdHJhbnNmb3JtOiBub25lOwogICAgICAgIG9wYWNpdHk6IDE7CiAgICAgICAgbWFyZ2luOiA1cHggYXV0bzsKICAgIH0KICAgICNzaWRlYmFyQ29sbGFwc2UuYWN0aXZlIHNwYW4gewogICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgfQogICAgI3NpZGViYXJDb2xsYXBzZS5hY3RpdmUgc3BhbjpmaXJzdC1vZi10eXBlIHsKICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMnB4KTsKICAgIH0KICAgICNzaWRlYmFyQ29sbGFwc2UuYWN0aXZlIHNwYW46bnRoLW9mLXR5cGUoMikgewogICAgICAgIG9wYWNpdHk6IDA7CiAgICB9CiAgICAjc2lkZWJhckNvbGxhcHNlLmFjdGl2ZSBzcGFuOmxhc3Qtb2YtdHlwZSB7CiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoMXB4LCAtMXB4KTsKICAgIH0KICAgIC8qI3NpZGViYXJDb2xsYXBzZSBzcGFuIHsKICAgICAgICBkaXNwbGF5OiBub25lOwogICAgfSovCn0KI21xLWRldGVjdG9yIHsKICAgIHZpc2liaWxpdHk6IGhpZGRlbjsKfQo="},{"version":3,"sources":["ol_map_page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4ofile":"ol_map_page.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"wrapper\">\n        <nav id=\"sidebar\" v-bind:class=\"[sidebarActive ? 'active' : '']\">\n            <div class=\"h-100 px-5 py-4 montserat-font text-center text-white blue-background_color sidebar-opacity\">\n                <a href=\"/\">\n                    <h6><i><span v-text=\"title\"></span></i></h6>\n                </a>\n                <h4><span v-text=\"site_name\"></span></h4>\n                <p class=\"text-left\">\n                    Bacteria levels can change rapidly between sampling dates. To fill in the gaps,\n                    we make daily <b>Nowcast</b> of bacteria conditions. These predictions do not represent\n                    swimming advisories, but provide estimates of the likelihood that bacteria conditions\n                    would warrant issuing an advisory if sampling were conducted that day.\n                </p>\n                <b-button class=\"btn-outline-primary p-2 mr-2\" v-bind:class=\"[nowcastActive ? 'active' : '']\"\n                          variant=\"outline-primary\"\n                          v-on:click=\"dataTypeClick('nowcast')\"><b>Nowcast</b></b-button>\n                <b-button class=\"btn-outline-primary p-2 ml-2\" v-bind:class=\"[advisoryActive ? 'active' : '']\"\n                          variant=\"outline-primary\"\n                          v-on:click=\"dataTypeClick('advisory')\"><b>Advisory</b></b-button>\n\n                <b-dropdown id=\"layer_dropdown\" class=\"layer_dropdown mt-4\" :text=\"current_layer_name\">\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'openstreetmap', '')\">Open Street Map</b-dropdown-item>\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'google', 'm')\">Road</b-dropdown-item>\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'google', 's')\">Satellite</b-dropdown-item>\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'google', 'y')\">Hybrid Satellite</b-dropdown-item>\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'google', 'p')\">Hybrid Terrain</b-dropdown-item>\n                    <!--\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'google', 'r')\">Altered Road</b-dropdown-item>\n                    <b-dropdown-item class=\"dropdown-item\" @click=\"layerSelected($event, 'google', 't')\">Terrain</b-dropdown-item>\n                    -->\n                </b-dropdown>\n                <br>\n                <p class=\"text-center mt-4\">\n                    <a href=\"\" class=\"text-white card-link\">Bacteria Sources</a>\n                </p>\n                <p class=\"text-center\">\n                    <a href=\"#\" class=\"text-white card-link\">Locations</a>\n                </p>\n                <p class=\"text-center\">\n                    <a href=\"/About\" class=\"text-white card-link\">About</a>\n                </p>\n            </div>\n        </nav>\n        <div id=\"content\">\n            <vl-map id=\"site_map\"\n                    style=\"width: 100%; height: 100%; position:absolute\"\n                    ref=\"site_map\"\n                    :load-tiles-while-animating=\"true\"\n                    :load-tiles-while-interacting=\"true\"\n                    data-projection=\"EPSG:4326\">\n                <vl-view :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\n                <vl-layer-tile :visible=\"xyz_layer_visible\">\n                    <vl-source-xyz :url=\"current_layer_url\" attributions=\"string or array\" />\n                </vl-layer-tile>\n                <vl-layer-tile :visible=\"osm_layer_visible\">\n                    <vl-source-osm></vl-source-osm>\n                </vl-layer-tile>\n\n                <vl-layer-vector id=\"sites\">\n                    <vl-source-vector ref=\"site_vector_layer\" :features.sync=\"features\"></vl-source-vector>\n                    <vl-style-func :factory=\"siteStyleFactory\"></vl-style-func>\n                </vl-layer-vector>\n                <vl-interaction-select :features.sync=\"selectedFeatures\" :layers=\"['sites']\">\n                    <vl-overlay v-for=\"feature in selectedFeatures\"\n                                :key=\"feature.id\"\n                                :id=\"feature.id\"\n                                :position=\"feature.geometry.coordinates\"\n                                :auto-pan=\"true\"\n                                :auto-pan-animation=\"{ duration: 300 }\">\n                        <div>\n                            <div :is=\"getPopupComponent(feature)\" v-bind:feature=\"feature\"></div>\n                            <!---\n                            <component :is=\"getPopupComponent(feature)\" v-bind:feature=\"feature\"></component>\n                            --->\n\n                        </div>\n                    </vl-overlay>\n\n                </vl-interaction-select>\n            </vl-map>\n            <button\n                    v-b-toggle.info-sidebar\n                    id=\"sidebarCollapse\"\n                    class=\"btn btn-outline-info btn-sm\"\n                    v-on:click=\"sidebarButtonClick()\"\n                    v-bind:class=\"[sidebarBtnActive ? 'active' : '']\">\n                <span></span>\n                <span></span>\n                <span></span>\n            </button>\n\n        </div>\n\n        <div v-show=\"featureStylingCompleted\">\n            <IconsLegend :icon_info=\"legend_icons\"></IconsLegend>\n        </div>\n\n        <!-- This gives us the ability to know when the media queries/breaks occur -->\n        <span ref=\"mq_detector\" id=\"mq-detector\">\n            <span ref=\"visible_xs\" class=\"d-block d-sm-none\">\n            </span>\n            <span ref=\"visible_sm\" class=\"d-none d-sm-block d-md-none\">\n            </span>\n            <span ref=\"visible_md\" class=\"d-none d-md-block d-lg-none\">\n            </span>\n            <span ref=\"visible_lg\" class=\"d-none d-lg-block d-xl-none\">\n            </span>\n            <span ref=\"visible_xlg\" class=\"d-none d-xl-block\">\n            </span>\n        </span>\n    </div>\n</template>\n\n<script>\n    import Vue from 'vue'\n    import 'bootstrap/dist/css/bootstrap.min.css'\n    import 'bootstrap-vue/dist/bootstrap-vue.css'\n    import 'typeface-montserrat/index.css'\n\n    import { Map, TileLayer, OsmSource, Geoloc, VectorLayer, VectorSource, XyzSource, StyleBox, CircleStyle, FillStyle,\n        StrokeStyle, Overlay, SelectInteraction, StyleFunc } from 'vuelayers'\n    Vue.use(Map);\n    Vue.use(TileLayer);\n    Vue.use(OsmSource);\n    Vue.use(Geoloc);\n    Vue.use(VectorLayer);\n    Vue.use(VectorSource);\n    Vue.use(XyzSource);\n    Vue.use(StyleBox);\n    Vue.use(FillStyle);\n    Vue.use(StrokeStyle);\n    Vue.use(CircleStyle);\n    Vue.use(Overlay);\n    Vue.use(SelectInteraction);\n    Vue.use(StyleFunc);\n\n\n    import 'vuelayers/lib/style.css' // needs css-loader\n\n    import { SidebarPlugin, ButtonPlugin, ButtonGroupPlugin, LayoutPlugin } from 'bootstrap-vue';\n    Vue.use(ButtonPlugin);\n    Vue.use(ButtonGroupPlugin);\n    Vue.use(LayoutPlugin);\n    Vue.use(SidebarPlugin);\n\n    import DataAPI from \"../utilities/rest_api\";\n    import FeatureUtils from \"../utilities/feature_funcs\";\n    import {findPointOnSurface} from 'vuelayers/lib/ol-ext'\n    import EventUtils from \"../utilities/analytics_funcs\";\n\n    import IconsLegend from \"@/components/icons_legend\";\n\n    import Style from 'ol/style/Style';\n    import Icon from 'ol/style/Icon';\n\n    //SInce these are not in the template, we import them here. We use them in the javascript below when\n    //determining which icon to use.\n    import LowMarkerIcon from '@/assets/images/low_marker_25x25.png'\n    import HiMarkerIcon from '@/assets/images/high_marker_25x25.png'\n    import NoneMarkerIcon from '@/assets/images/none_marker_25x25.png'\n\n    export default {\n        name: 'OLMapPage',\n\n        components: {\n          IconsLegend\n        },\n        data () {\n            return {\n                title: \"HOW'S THE BEACH\",\n                site_name: \"\",\n                zoom: 5,\n                center: [0,0],\n                rotation: 0,\n                features: [],\n                loading: false,\n                current_google_layer: 's',\n                current_layer_url: '',\n                current_layer_name: \"Satellite\",\n                xyz_layer_visible: true,\n                osm_layer_visible: false,\n                selectedFeatures: [],\n                advisory_limits: undefined,\n                nowcastActive: true,\n                advisoryActive: false,\n                sidebarActive: false,\n                sidebarBtnActive: false,\n                currMqNdx: undefined,\n                mqSelectors: undefined,\n                legend_icons: [],\n                features_styled: 0\n            }\n        },\n        created() {\n\n            window.addEventListener(\"resize\", this.resizeHandler);\n        },\n        mounted () {\n            let vm = this;\n            this.loading = true;\n            this.features_styled = 0;\n\n            this.mqSelectors = [\n                this.$refs.visible_xs,\n                this.$refs.visible_sm,\n                this.$refs.visible_md,\n                this.$refs.visible_lg,\n                this.$refs.visible_xlg\n            ];\n\n\n            this.current_layer_url = `https://mt0.google.com/vt/lyrs=${this.current_google_layer}&hl=en&x={x}&y={y}&z={z}`;\n            let path = window.location.pathname;\n            if (path.length) {\n                let location_site_name = this.$store.state.site_name;\n                console.debug(\"Retrieving initial site: \" +  location_site_name + \" data.\");\n                DataAPI.GetSitesPromise(location_site_name, '', true, true).then(features => {\n                    console.debug(\"Retrieved: \" + features.data.sites.features.length + \" features\");\n                    vm.features = features.data.sites.features;\n                    if('limits' in features.data.advisory_info) {\n                        this.$store.commit('updateAdvisoryLimits', features.data.advisory_info.limits);\n                    }\n                    this.site_name = features.data.project_area.name;\n\n                    vm.loading =  false;\n\n                    setTimeout(function() {\n                        if(vm.$refs.site_vector_layer.$source != undefined) {\n                            vm.$refs.site_map.$map.updateSize();\n                            vm.sitesLayerExtents = vm.$refs.site_vector_layer.$source.getExtent(vm.sitesLayerExtents);\n                            let m_size = vm.$refs.site_map.$map.getSize();\n                            vm.$refs.site_map.getView().fit(vm.sitesLayerExtents, m_size);\n                            //vm.$refs.site_map.$map.redraw();\n                        }\n                    }, 100);\n                    /*\n                    vm.$nextTick(function() {\n                        console.debug(\"nextTick mounted setting map extent.\");\n                    });*/\n                })\n                    .catch(error => {\n                        let error_message = '';\n                        let status_code = 404;\n                        if('response' in error && error.response !== undefined) {\n                            status_code = error.response.status;\n                            if ('error' in error.response.data) {\n                                if ('message' in error.response.data.error) {\n                                    error_message = error.response.data.error.message;\n                                }\n                            } else {\n                                error_message = error.response.data;\n                            }\n                            console.error(\"Status code: \" + status_code +\". Error Msg: \" + error_message);\n                        }\n                        else{\n                            console.error(error);\n                            error_message = error;\n                        }\n                        this.$router.push({\n                            name: '404',\n                            params: {\n                                error_message: error_message,\n                                status_code: status_code\n                            }\n                        });\n                    });\n\n            }\n        },\n        destroyed() {\n            window.removeEventListener(\"resize\", this.resizeHandler);\n        },\n        methods: {\n            resizeHandler() {\n\n                for (var i = 0; i < this.mqSelectors.length; i++) {\n                    if(this.mqSelectors[i].offsetLeft > 0)\n                    {\n                        if (this.currMqIdx != i) {\n                            this.currMqIdx = i;\n                            break;\n                        }\n                    }\n                }\n                if(this.currMqIdx < 3)\n                {\n                    this.sidebarActive = false;\n                }\n\n            },\n            pointOnSurface: findPointOnSurface,\n            siteStyleFactory() {\n                console.debug(\"siteStyleFactory started\");\n                let vm = this;\n                /*\n                For each feature, this function is used to determine what icon to use based on the level.\n                */\n                var siteStyleFunction = function(feature, resolution) {\n                    resolution;\n                    if(vm.features_styled < vm.features.length) {\n                        vm.features_styled += 1;\n                    }\n                    let icon_scale = 0.75;\n                    let properties = feature.getProperties();\n                    let site_type = properties.site_type;\n                    let icon = new Icon({\n                        src: NoneMarkerIcon,\n                        scale: icon_scale\n                    });\n                    if(site_type == 'Water Quality')\n                    {\n                        try\n                        {\n                            if (vm.advisoryActive) {\n                              if ('advisory' in properties[site_type]) {\n                                let dataFresh = FeatureUtils.isDataFresh(properties[site_type].advisory);\n                                if (dataFresh) {\n                                  let value = properties[site_type].advisory.value;\n                                  let hi_limit = vm.$store.state.advisory_limits.hi;\n                                  let lo_limit = vm.$store.state.advisory_limits.low;\n                                  if (value >= hi_limit.minimum) {\n                                    //console.debug(\"Feature: \" + feature.getId() + \" Hi style value: \" + value);\n                                    icon = new Icon({\n                                      src: HiMarkerIcon,\n                                      scale: icon_scale\n                                    });\n                                  } else if (value < lo_limit.maximum) {\n                                    //console.debug(\"Feature: \" + feature.getId() + \" Low style value: \" + value);\n                                    icon = new Icon({\n                                      src: LowMarkerIcon,\n                                      scale: icon_scale\n                                    });\n                                  }\n                                }\n                              } else {\n                                console.debug(\"Feature: \" + feature.getId() + \" No advisory data found.\");\n                              }\n                            } else {\n                              icon = new Icon({\n                                src: NoneMarkerIcon,\n                                scale: icon_scale\n                              });\n                              if ('nowcasts' in properties[site_type]) {\n                                let level = properties[site_type].nowcasts.level;\n                                if (level == 'LOW') {\n                                  icon = new Icon({\n                                    src: LowMarkerIcon,\n                                    scale: icon_scale\n                                  });\n                                } else if (level == 'HIGH') {\n                                  icon = new Icon({\n                                    src: HiMarkerIcon,\n                                    scale: icon_scale\n                                  });\n                                }\n                              }\n                            }\n                        }\n                        catch(error)\n                        {\n                          icon = new Icon({\n                            src: NoneMarkerIcon,\n                            scale: icon_scale\n                          });\n\n                          console.error(error);\n                        }\n                        if (!(vm.legend_icons.includes('Water Quality'))) {\n                          vm.legend_icons.push(\"Water Quality\");\n                        }\n                    }\n                    else if(site_type == 'Shellfish')\n                    {\n                        try\n                        {\n                            if (site_type in properties) {\n                              //First check to see if our data is still fresh.\n                              let dataFresh = FeatureUtils.isDataFresh(properties[site_type].advisory);\n                              if (dataFresh) {\n                                //Shellfish values are either true for closed or false for open.\n                                let value = properties[site_type].advisory.value;\n                                if (!value) {\n                                  icon = new Icon({\n                                    src: ShellfishLowMarkerIcon,\n                                    scale: icon_scale\n                                  });\n                                } else {\n                                  icon = new Icon({\n                                    src: ShellfishHiMarkerIcon,\n                                    scale: icon_scale\n                                  });\n                                }\n                              } else {\n                                icon = new Icon({\n                                  src: ShellfishNoneMarkerIcon,\n                                  scale: icon_scale\n                                });\n                              }\n                            }\n                        }\n                        catch(error)\n                        {\n                            icon = new Icon({\n                              src: ShellfishNoneMarkerIcon,\n                              scale: icon_scale\n                            });\n                            console.error(error);\n                        }\n                        if (!(vm.legend_icons.includes('Shellfish'))) {\n                          vm.legend_icons.push(\"Shellfish\");\n                        }\n                    }\n                    else if(site_type == 'Camera Site') {\n                        icon = new Icon({\n                            src: CameraIcon,\n                            scale: icon_scale\n                        });\n                        if(!(vm.legend_icons.includes('Camera Site'))) {\n                            vm.legend_icons.push('Camera Site');\n                        }\n\n                    }\n\n                    else if(site_type == 'Beach Ambassador') {\n                      icon = new Icon({\n                        src: MoteMarineBeachAmbassadorIcon,\n                        //Scale the icon a bit to make it less overwhelming on the map.\n                        scale: 0.8\n                      });\n                      if(!(vm.legend_icons.includes('Beach Ambassador'))) {\n                        vm.legend_icons.push('Beach Ambassador');\n                      }\n\n                    }\n\n                    else if(site_type == 'Shellcast')\n                    {\n                      icon = new Icon({\n                        src: ShellcastIcon,\n                      });\n                      if(!(vm.legend_icons.includes('Shellcast'))) {\n                        vm.legend_icons.push('Shellcast');\n                      }\n\n                    }\n\n                  let icon_style = [\n                        new Style({\n                            image: icon,\n                        })\n                    ];\n                    return(icon_style);\n                };\n                return siteStyleFunction;\n            },\n            dataTypeClick(data_type) {\n                console.debug(\"Data Type Button clicked: \" + data_type);\n                if(data_type == 'nowcast')\n                {\n                    this.nowcastActive = true;\n                    this.advisoryActive = false;\n                    this.$refs.site_vector_layer.$source.changed();\n                }\n                else{\n                    this.nowcastActive = false;\n                    this.advisoryActive = true;\n                    this.$refs.site_vector_layer.$source.changed();\n                }\n            },\n            sidebarButtonClick() {\n                this.sidebarActive = !this.sidebarActive;\n                this.sidebarBtnActive = !this.sidebarBtnActive;\n                console.debug(\"sidebarButtonClick clicked: \" + this.sidebarActive);\n            },\n            layerSelected(event, layer_type, layer_selected) {\n                //Set the name of the current layer selected in dropdown.\n                this.current_layer_name = event.target.text;\n                this.osm_layer_visible = false;\n                this.xyz_layer_visible = false;\n                if(layer_type === 'google') {\n                    this.xyz_layer_visible = true;\n                    //Build the URL for the XYZ google layer.\n                    this.current_google_layer = layer_selected;\n                    this.current_layer_url = `https://mt0.google.com/vt/lyrs=${this.current_google_layer}&hl=en&x={x}&y={y}&z={z}`;\n                }\n                else if(layer_type == 'openstreetmap') {\n                    this.osm_layer_visible = true;\n                }\n            },\n            /*\n            This allows us to dynamically choose the popup to use based on the site_type field.\n            */\n            getPopupComponent(feature) {\n                /*Track the click event*/\n                /*this.$ga.event({\n                    eventCategory: 'SampleSiteClick',\n                    eventAction: 'click',\n                    eventLabel: feature.properties.description\n                });*/\n\n                if(feature.properties.site_type == \"Water Quality\")\n                {\n                    let name = 'StationPage';\n                    EventUtils.log_event(this.$gtag, 'click', 'WQ Station', feature.properties.description, 0);\n                    this.$router.push({\n                      name: name,\n                      params: {\n                        site_name: feature.properties.description,\n                        site_id: feature.id,\n                        graph_data: this.graph_data\n                      }\n                    });\n\n                  //return(WQPopup);\n                }\n\n                else if(feature.properties.site_type == \"Shellfish\") {\n                  EventUtils.log_event(this.$gtag, 'click', 'Shellfish Station', feature.properties.description, 0);\n                  this.$router.push({\n                    name: 'ShellfishPage',\n                    params: {\n                      p_site_name: feature.properties.description,\n                      p_site_id: feature.id,\n                      p_program_type: \"Shellfish Monitoring\"\n                    }\n                  });\n\n                }\n\n                else if(feature.properties.site_type == \"Beach Ambassador\") {\n                  return(BCRSPopup);\n                }\n                else if(feature.properties.site_type == \"Shellcast\") {\n                  return(ShellcastPopup);\n                }\n                else if(feature.properties.site_type == \"Camera Site\") {\n                  return(CameraPopupBasic);\n                }\n\n\n                /*\n                else if(feature.properties.site_type == \"Shellfish\") {\n                    EventUtils.log_event(this.$gtag, 'click', 'Shellfish Station', feature.properties.description, 0);\n                    return(ShellfishPopup);\n                }\n                else if(feature.properties.site_type == \"Rip Current\") {\n                    EventUtils.log_event(this.$gtag, 'click', 'Rip Current', feature.properties.description, 0);\n                    return(RipcurrentPopup);\n                }\n                else if(feature.properties.site_type == \"Camera Site\") {\n                    EventUtils.log_event(this.$gtag, 'click', 'Camera Site', feature.properties.description, 0);\n                    return(CameraPopup);\n                }\n                */\n                //return(UnknownTypePopup);\n            }\n        },\n        computed: {\n            featureStylingCompleted: function() {\n                if(this.features.length > 0 && (this.features_styled == this.features.length))\n                {\n                    console.debug(\"featureStylingCompleted styled all features.\");\n                    return(true);\n                }\n                console.debug(\"featureStylingCompleted styled: \" + this.features_styled + \" features.\");\n                return(false);\n            }\n        },\n        watch: {\n\n            /*\n            features: _.debounce(function() {\n                this.$refs.site_map.$map.updateSize();\n                this.sitesLayerExtents = this.$refs.site_vector_layer.$source.getExtent();\n                let m_size = vm.$refs.site_map.$map.getSize();\n                this.$refs.site_map.getView().fit(this.sitesLayerExtents, m_size);\n\n                this.message = `Loaded ${this.features.length}`;\n\n                this.$refs.mapView.$view.fit(\n                    this.$refs.geojsonSource.$source.getExtent(),\n                    {\n                        duration: 1000,\n                    },\n                )\n            }, 10),*/\n            /*\n            sitesLayerExtents: function() {\n                console.debug(\"sitesLayerExtents new extents\");\n            }*/\n        }\n    }\n</script>\n<style>\n    body, html {\n        height: 100%;\n    }\n    .btn-outline-primary {\n\n        color: #FFFFFF;\n        border-color: #FFFFFF;\n        opacity: 0.75;\n    }\n    .btn-outline-primary:hover,\n    .btn-outline-primary:focus,\n    .btn-outline-primary:active {\n        color: rgba(0, 61, 126, .85);\n        background-color: #ffffff;\n        border-color: #FFFFFF;\n        opacity: 0.75;\n    }\n    .btn-outline-primary:not(:disabled):not(.disabled).active,\n    .btn-outline-primary:not(:disabled):not(.disabled):active,\n    .show > .btn-outline-primary.dropdown-toggle\n    {\n        color: rgba(0, 61, 126, .85);\n        background-color: #ffffff;\n        border-color: #FFFFFF;\n        opacity: 0.75;\n\n    }\n    #vl-map-site_map .ol-zoom {\n        background-color: rgba(0, 61, 126, .85) !important;\n    }\n    #vl-map-site_map .ol-zoom-out {\n        background-color: rgba(0, 61, 126, .85) !important;\n    }\n    /*\n    #vl-map-site_map .ol-zoom-in {\n        margin-top: 200px !important;\n    }\n    #vl-map-site_map .ol-zoom-out {\n        margin-top: 240px !important;\n    }\n    */\n    .layer_dropdown > button {\n        background-color: rgba(0, 61, 126, .85);\n        border-color: #FFFFFF;\n        opacity: 0.75;\n    }\n\n    .layer_dropdown > .btn-secondary:hover,\n    .layer_dropdown > .btn-secondary:focus,\n    .layer_dropdown > .btn-secondary:active {\n        color: rgba(0, 61, 126, .85);\n        background-color: #FFFFFF;\n        opacity: 0.75;\n    }\n\n</style>\n<style scoped>\n    .wrapper {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        align-items: stretch;\n        perspective: 1500px;\n    }\n\n    #sidebar {\n        min-width: 300px;\n        max-width: 300px;\n        background: #7386D5;\n        color: #fff;\n        transition: all 0.6s cubic-bezier(0.945, 0.020, 0.270, 0.665);\n        transform-origin: bottom left;\n    }\n\n    #sidebar.active {\n        margin-left: -300px;\n        transform: rotateY(100deg);\n    }\n\n    #sidebar .sidebar-header {\n        padding: 20px;\n        background: #6d7fcc;\n    }\n\n    #sidebar ul.components {\n        padding: 20px 0;\n        border-bottom: 1px solid #47748b;\n    }\n\n    #sidebar ul p {\n        color: #fff;\n        padding: 10px;\n    }\n\n    #sidebar ul li a {\n        padding: 10px;\n        font-size: 1.1em;\n        display: block;\n    }\n    #sidebar ul li a:hover {\n        color: #7386D5;\n        background: #fff;\n    }\n\n    #sidebar ul li.active > a, a[aria-expanded=\"true\"] {\n        color: #fff;\n        background: #6d7fcc;\n    }\n\n    #sidebarCollapse {\n        width: 40px;\n        height: 40px;\n        background: #f5f5f5;\n    }\n\n    #sidebarCollapse span {\n        width: 80%;\n        height: 2px;\n        margin: 0 auto;\n        display: block;\n        background: #555;\n        transition: all 0.8s cubic-bezier(0.810, -0.330, 0.345, 1.375);\n    }\n    #sidebarCollapse span:first-of-type {\n        /* rotate first one */\n        transform: rotate(45deg) translate(2px, 2px);\n    }\n    #sidebarCollapse span:nth-of-type(2) {\n        /* second one is not visible */\n        opacity: 0;\n    }\n    #sidebarCollapse span:last-of-type {\n        /* rotate third one */\n        transform: rotate(-45deg) translate(1px, -1px);\n    }\n    #sidebarCollapse.active span {\n        /* no rotation */\n        transform: none;\n        /* all bars are visible */\n        opacity: 1;\n        margin: 5px auto;\n    }\n    #sidebarCollapse {\n        position: relative;\n        z-index: 1000;\n        top: 7em;\n        left: .75em;\n    }\n    #content {\n        width: 100%;\n        min-height: 100vh;\n        transition: all 0.3s;\n    }\n\n    .sidebar-opacity {\n        opacity: 0.9;\n    }\n    @media (max-width: 768px) {\n        #sidebar {\n            margin-left: -300px;\n        }\n        #sidebar.active {\n            margin-left: 0;\n        }\n        #sidebar.active {\n            margin-left: 0;\n            transform: none;\n        }\n        #sidebarCollapse span:first-of-type,\n        #sidebarCollapse span:nth-of-type(2),\n        #sidebarCollapse span:last-of-type {\n            transform: none;\n            opacity: 1;\n            margin: 5px auto;\n        }\n        #sidebarCollapse.active span {\n            margin: 0 auto;\n        }\n        #sidebarCollapse.active span:first-of-type {\n            transform: rotate(45deg) translate(2px, 2px);\n        }\n        #sidebarCollapse.active span:nth-of-type(2) {\n            opacity: 0;\n        }\n        #sidebarCollapse.active span:last-of-type {\n            transform: rotate(-45deg) translate(1px, -1px);\n        }\n        /*#sidebarCollapse span {\n            display: none;\n        }*/\n    }\n    #mq-detector {\n        visibility: hidden;\n    }\n</style>\n"]}]}