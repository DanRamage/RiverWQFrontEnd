{"remainingRequest":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/scatter_plot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/src/components/scatter_plot.vue","mtime":1682360357864},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/babel-loader/lib/index.js","mtime":1682365544304},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1682361370579},{"path":"/Users/danramage/Documents/workspace/WaterQuality/RiverWQFrontEnd/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1682365544513}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgogICAgaW1wb3J0IEhpZ2hjaGFydHMgZnJvbSAnaGlnaGNoYXJ0cyc7CiAgICAvL2ltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50L3NyYy9tb21lbnQnOwogICAgaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwoKICAgIGV4cG9ydCBkZWZhdWx0IHsKICAgICAgICBuYW1lOiAnV1FQbG90JywKICAgICAgICBwcm9wczogewogICAgICAgICAgICAnY2hhcnRfb3B0aW9ucyc6IE9iamVjdCwKICAgICAgICAgICAgJ2lkJzogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdjaGFydF9pZCd9LAogICAgICAgICAgICAnc3RhdGlvbl9kYXRhJzogQXJyYXksCiAgICAgICAgICAgICdoZWlnaHQnOiBOdW1iZXIsCiAgICAgICAgICAgICd3aWR0aCc6IE51bWJlcgogICAgICAgIH0sCiAgICAgICAgZGF0YSAoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBjaGFydDogdW5kZWZpbmVkCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG1ldGhvZHM6IHsKICAgICAgICAgIHVwZGF0ZShvcHRpb25zKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoInVwZGF0ZSBjYWxsZWQuIik7CiAgICAgICAgICAgIGlmKHRoaXMuY2hhcnQgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgIHRoaXMuY2hhcnQudXBkYXRlKG9wdGlvbnMpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGVzdHJveSgpIHsKICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiZGVzdHJveSBjYWxsZWQuIik7CiAgICAgICAgICAgIHRoaXMuY2hhcnQuZGVzdHJveSgpOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbW91bnRlZCgpCiAgICAgICAgewogICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJzY2F0dGVyX3Bsb3QgbW91bnRlZCBpZDogIiArIHRoaXMuaWQpOwogICAgICAgICAgICAvL3YtYmluZDpzdHlsZT0ie2hlaWdodDogaGVpZ2h0LCB3aWR0aDogd2lkdGggfSIKICAgICAgICAgICAgdmFyIHZtPXRoaXM7CiAgICAgICAgICAgIHZtOwogICAgICAgICAgICAvL3ZtLmNoYXJ0ID0gbmV3IEhpZ2hjaGFydHMuY2hhcnQodm0uaWQsIHZtLmNoYXJ0X29wdGlvbnMpOwogICAgICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHZtLmNoYXJ0ID0gbmV3IEhpZ2hjaGFydHMuY2hhcnQodm0uaWQsIHZtLmNoYXJ0X29wdGlvbnMpOwogICAgICAgICAgICAgICAgaWYodGhpcy5zdGF0aW9uX2RhdGEubGVuZ3RoKQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhcnQuc2VyaWVzWzBdLnNldERhdGEodGhpcy5zdGF0aW9uX2RhdGEpOy8vKHtkYXRhOiB0aGlzLnN0YXRpb25fZGF0YSwgbmFtZTogIkJhY3RlcmlhIENvdW50cyJ9KTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJ0LnhBeGlzWzBdLnNldEV4dHJlbWVzKG1vbWVudC51dGMoKS5zdWJ0cmFjdCgzNjUsICJkYXlzIikudmFsdWVPZigpLCBtb21lbnQudXRjKCkudmFsdWVPZigpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHZtLmNoYXJ0LnNldFNpemUodm0ud2lkdGgsIHZtLmhlaWdodCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgY29tcHV0ZWQ6IHsKICAgICAgICAgICAgc3R5bGVfY2hhcnRfaGVpZ2h0OiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGxldCBzdHlsZSA9IHRoaXMuaGVpZ2h0ICsgJ3B4JzsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoImNoYXJ0IGhlaWdodDogIiArIHN0eWxlKTsKICAgICAgICAgICAgICAgIHJldHVybihzdHlsZSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN0eWxlX2NoYXJ0X3dpZHRoOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGxldCBzdHlsZSA9IHRoaXMud2lkdGggKyAncHgnOwogICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiY2hhcnQgd2lkdGg6ICIgKyBzdHlsZSk7CiAgICAgICAgICAgICAgICByZXR1cm4oc3R5bGUpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB3YXRjaDogewoKICAgICAgICAgICAgaGVpZ2h0OiBmdW5jdGlvbihuZXdWYWwsIG9sZFZhbCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygiaGVpZ2h0IHVwZGF0ZWQ6ICIgKyBuZXdWYWwgKyAiIHRvICIgKyBvbGRWYWwpOwogICAgICAgICAgICAgICAgdGhpcy5oZWlnaHQgPSBuZXdWYWw7CiAgICAgICAgICAgICAgICBpZih0aGlzLmNoYXJ0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgICAgICAvL3RoaXMuY2hhcnQucmVmbG93KCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFydC5zZXRTaXplKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgd2lkdGg6IGZ1bmN0aW9uKG5ld1ZhbCwgb2xkVmFsKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKCJ3aWR0aCB1cGRhdGVkOiAiICsgbmV3VmFsICsgIiB0byAiICsgb2xkVmFsKTsKICAgICAgICAgICAgICAgIHRoaXMud2lkdGggPSBuZXdWYWw7CiAgICAgICAgICAgICAgICBpZih0aGlzLmNoYXJ0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgICAgICAvL3RoaXMuY2hhcnQucmVmbG93KCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFydC5zZXRTaXplKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIHN0YXRpb25fZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBpZih0aGlzLmNoYXJ0ID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJ0ID0gbmV3IEhpZ2hjaGFydHMuY2hhcnQodGhpcy5pZCwgdGhpcy5jaGFydF9vcHRpb25zKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vdGhpcy5jaGFydC5zZXRTaXplKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTsKICAgICAgICAgICAgICAgIHRoaXMuY2hhcnQuc2VyaWVzWzBdLnNldERhdGEodGhpcy5zdGF0aW9uX2RhdGEpOwogICAgICAgICAgICAgICAgLy90aGlzLmNoYXJ0LnhBeGlzWzBdLnNldEV4dHJlbWVzKG1vbWVudC51dGMoKS5zdWJ0cmFjdCgzNjUsICJkYXlzIikudmFsdWVPZigpLCBtb21lbnQudXRjKCkudmFsdWVPZigpKTsKCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgIHRpdGxlKG5ld1ZhbHVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9ucy50aXRsZS50ZXh0ID0gbmV3VmFsdWU7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHBvaW50cyhuZXdWYWx1ZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGhpcy5jaGFydE9wdGlvbnMuc2VyaWVzWzBdLmRhdGEgPSBuZXdWYWx1ZTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2hhcnRUeXBlKG5ld1ZhbHVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9ucy5jaGFydC50eXBlID0gbmV3VmFsdWUudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2VyaWVzQ29sb3IgKG5ld1ZhbHVlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9ucy5zZXJpZXNbMF0uY29sb3IgPSBuZXdWYWx1ZS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBhbmltYXRpb25EdXJhdGlvbiAobmV3VmFsdWUpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQXJnc1syXS5kdXJhdGlvbiA9IE51bWJlcihuZXdWYWx1ZSk7CiAgICAgICAgICAgIH0qLwogICAgICAgIH0KICAgIH0K"},{"version":3,"sources":["scatter_plot.vue"],"names":[],"mappingsfile":"scatter_plot.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div\n         :id=\"id\"\n         :height=\"style_chart_height\"\n         :width=\"style_chart_width\"\n    >\n    </div>\n</template>\n\n<script>\n\n    import Highcharts from 'highcharts';\n    //import moment from 'moment/src/moment';\n    import moment from 'moment';\n\n    export default {\n        name: 'WQPlot',\n        props: {\n            'chart_options': Object,\n            'id': { type: String, default: 'chart_id'},\n            'station_data': Array,\n            'height': Number,\n            'width': Number\n        },\n        data () {\n            return {\n                chart: undefined\n            }\n        },\n        methods: {\n          update(options) {\n            console.debug(\"update called.\");\n            if(this.chart !== undefined) {\n              this.chart.update(options);\n            }\n          },\n          destroy() {\n            console.debug(\"destroy called.\");\n            this.chart.destroy();\n          }\n        },\n        mounted()\n        {\n            console.debug(\"scatter_plot mounted id: \" + this.id);\n            //v-bind:style=\"{height: height, width: width }\"\n            var vm=this;\n            vm;\n            //vm.chart = new Highcharts.chart(vm.id, vm.chart_options);\n            this.$nextTick(function() {\n                vm.chart = new Highcharts.chart(vm.id, vm.chart_options);\n                if(this.station_data.length)\n                {\n                    this.chart.series[0].setData(this.station_data);//({data: this.station_data, name: \"Bacteria Counts\"});\n                    this.chart.xAxis[0].setExtremes(moment.utc().subtract(365, \"days\").valueOf(), moment.utc().valueOf());\n                }\n                vm.chart.setSize(vm.width, vm.height);\n            });\n        },\n        computed: {\n            style_chart_height: function() {\n                let style = this.height + 'px';\n                console.debug(\"chart height: \" + style);\n                return(style);\n            },\n            style_chart_width: function() {\n                let style = this.width + 'px';\n                console.debug(\"chart width: \" + style);\n                return(style);\n            }\n        },\n        watch: {\n\n            height: function(newVal, oldVal)\n            {\n                console.debug(\"height updated: \" + newVal + \" to \" + oldVal);\n                this.height = newVal;\n                if(this.chart !== undefined) {\n                    //this.chart.reflow();\n                    this.chart.setSize(this.width, this.height);\n                }\n            },\n            width: function(newVal, oldVal)\n            {\n                console.debug(\"width updated: \" + newVal + \" to \" + oldVal);\n                this.width = newVal;\n                if(this.chart !== undefined) {\n                    //this.chart.reflow();\n                    this.chart.setSize(this.width, this.height);\n                }\n            },\n\n            station_data: function() {\n                if(this.chart === undefined) {\n                    this.chart = new Highcharts.chart(this.id, this.chart_options);\n                }\n                //this.chart.setSize(this.width, this.height);\n                this.chart.series[0].setData(this.station_data);\n                //this.chart.xAxis[0].setExtremes(moment.utc().subtract(365, \"days\").valueOf(), moment.utc().valueOf());\n\n            },\n            /*\n            title(newValue)\n            {\n                this.chartOptions.title.text = newValue;\n            },\n            points(newValue)\n            {\n                this.chartOptions.series[0].data = newValue;\n            },\n            chartType(newValue)\n            {\n                this.chartOptions.chart.type = newValue.toLowerCase();\n            },\n            seriesColor (newValue)\n            {\n                this.chartOptions.series[0].color = newValue.toLowerCase();\n            },\n            animationDuration (newValue)\n            {\n                this.updateArgs[2].duration = Number(newValue);\n            }*/\n        }\n    }\n</script>\n\n<style scoped>\n    .chartElem {\n    }\n</style>\n"]}]}